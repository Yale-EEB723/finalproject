#remove NAs
analysis.table.reference<-filter(sample.table,animal==reference & !is.na(homology_id))
analysis.table.comparison<-filter(sample.table,animal==comparison & !is.na(homology_id))
#list of unique scaffold ids in reference
ref.scaffold<-unique(analysis.table.reference$species_scaffold)
#for each unique scaffold in the reference table:
for (r in ref.scaffold){
#find cluster id for each scaffold
reference.table.scaffold<-analysis.table.reference%>%filter(.,species_scaffold==r)
ref.cluster_id<-unique(reference.table.scaffold$cluster_id)
#find all unique scaffolds in comparison table with that cluster_id
comp.scaffold<-analysis.table.comparison%>%filter(.,cluster_id==ref.cluster_id)
comp.scaffold<-unique(comp.scaffold$species_scaffold)
#for each unique scaffold in comparison table w/ cluster_id
for (c in comp.scaffold){
#isolate genes from that scaffold and compare to original ref scaffold
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold==c)
comparison_absent<-anti_join(reference.table.scaffold,comp.table.scaffold,by="homology_id")
blah<-c
comparison_absent<-mutate(comparison_absent,comp_scaffold=blah)
print(c)
}
}
#works line by line but not when looping
comparison_absent<-anti_join(analysis.table.reference,analysis.table.comparison,by="homology_id")
View(comparison_absent)
c
c
comp.scaffold
comp.scaffold<-analysis.table.comparison%>%filter(.,cluster_id==ref.cluster_id)
View(comp.scaffold)
View(comp.scaffold)
reference="Homo_sapiens"
comparison="Danio_rerio"
#subset cluster.master.table for the reference or comparison animal:
#analysis.table.reference<-filter(cluster.master.table,animal==reference)
#analysis.table.comparison<-filter(cluster.master.table,animal==comparison)
sample.table<-read.table("sample.table.txt",header=TRUE,sep=",")
#remove NAs
analysis.table.reference<-filter(sample.table,animal==reference & !is.na(homology_id))
analysis.table.comparison<-filter(sample.table,animal==comparison & !is.na(homology_id))
#list of unique scaffold ids in reference
ref.scaffold<-unique(analysis.table.reference$species_scaffold)
#for each unique scaffold in the reference table:
for (r in ref.scaffold){
#find cluster id for each scaffold
reference.table.scaffold<-analysis.table.reference%>%filter(.,species_scaffold==r)
ref.cluster_id<-unique(reference.table.scaffold$cluster_id)
#find all unique scaffolds in comparison table with that cluster_id
comp.scaffold<-analysis.table.comparison%>%filter(.,cluster_id==ref.cluster_id)
comp.scaffold<-unique(comp.scaffold$species_scaffold)
#for each unique scaffold in comparison table w/ cluster_id
for (c in comp.scaffold){
#isolate genes from that scaffold and compare to original ref scaffold
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold==c)
comparison_absent<-anti_join(reference.table.scaffold,comp.table.scaffold,by="homology_id")
print(c)
}
}
#works line by line but not when looping
comparison_absent<-anti_join(analysis.table.reference,analysis.table.comparison,by="homology_id")
View(sample.table)
View(analysis.table.reference)
View(analysis.table.comparison)
ref.scaffold
ref.scaffold<-to.String(unique(analysis.table.reference$species_scaffold))
ref.scaffold<-toString(unique(analysis.table.reference$species_scaffold))
ref.scaffold
reference="Homo_sapiens"
comparison="Danio_rerio"
#subset cluster.master.table for the reference or comparison animal:
#analysis.table.reference<-filter(cluster.master.table,animal==reference)
#analysis.table.comparison<-filter(cluster.master.table,animal==comparison)
sample.table<-read.table("sample.table.txt",header=TRUE,sep=",")
#remove NAs
analysis.table.reference<-filter(sample.table,animal==reference & !is.na(homology_id))
analysis.table.comparison<-filter(sample.table,animal==comparison & !is.na(homology_id))
#list of unique scaffold ids in reference
ref.scaffold<-toString(unique(analysis.table.reference$species_scaffold))
#for each unique scaffold in the reference table:
for (r in ref.scaffold){
#find cluster id for each scaffold
reference.table.scaffold<-analysis.table.reference%>%filter(.,species_scaffold==r)
ref.cluster_id<-unique(reference.table.scaffold$cluster_id)
#find all unique scaffolds in comparison table with that cluster_id
comp.scaffold<-analysis.table.comparison%>%filter(.,cluster_id==ref.cluster_id)
comp.scaffold<-unique(comp.scaffold$species_scaffold)
#for each unique scaffold in comparison table w/ cluster_id
for (c in comp.scaffold){
#isolate genes from that scaffold and compare to original ref scaffold
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold==c)
comparison_absent<-anti_join(reference.table.scaffold,comp.table.scaffold,by="homology_id")
print(c)
}
}
reference="Homo_sapiens"
comparison="Danio_rerio"
#subset cluster.master.table for the reference or comparison animal:
#analysis.table.reference<-filter(cluster.master.table,animal==reference)
#analysis.table.comparison<-filter(cluster.master.table,animal==comparison)
sample.table<-read.table("sample.table.txt",header=TRUE,sep=",")
#remove NAs
analysis.table.reference<-filter(sample.table,animal==reference & !is.na(homology_id))
analysis.table.comparison<-filter(sample.table,animal==comparison & !is.na(homology_id))
#list of unique scaffold ids in reference
ref.scaffold<-as.list(unique(analysis.table.reference$species_scaffold))
#for each unique scaffold in the reference table:
for (r in ref.scaffold){
#find cluster id for each scaffold
reference.table.scaffold<-analysis.table.reference%>%filter(.,species_scaffold==r)
ref.cluster_id<-unique(reference.table.scaffold$cluster_id)
#find all unique scaffolds in comparison table with that cluster_id
comp.scaffold<-analysis.table.comparison%>%filter(.,cluster_id==ref.cluster_id)
comp.scaffold<-unique(comp.scaffold$species_scaffold)
#for each unique scaffold in comparison table w/ cluster_id
for (c in comp.scaffold){
#isolate genes from that scaffold and compare to original ref scaffold
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold==c)
comparison_absent<-anti_join(reference.table.scaffold,comp.table.scaffold,by="homology_id")
print(c)
}
}
#works line by line but not when looping
comparison_absent<-anti_join(analysis.table.reference,analysis.table.comparison,by="homology_id")
ref.scaffold
View(reference.table.scaffold)
ref.cluster_id
View(comp.scaffold)
View(analysis.table.reference)
View(analysis.table.comparison)
reference="Homo_sapiens"
comparison="Danio_rerio"
#subset cluster.master.table for the reference or comparison animal:
#analysis.table.reference<-filter(cluster.master.table,animal==reference)
#analysis.table.comparison<-filter(cluster.master.table,animal==comparison)
sample.table<-read.table("sample.table.txt",header=TRUE,sep=",")
#remove NAs
analysis.table.reference<-filter(sample.table,animal==reference & !is.na(homology_id))
analysis.table.comparison<-filter(sample.table,animal==comparison & !is.na(homology_id))
#list of unique scaffold ids in reference
ref.scaffold<-unique(analysis.table.reference$species_scaffold)
#for each unique scaffold in the reference table:
for (r in ref.scaffold){
#find cluster id for each scaffold
reference.table.scaffold<-analysis.table.reference%>%filter(.,species_scaffold==r)
ref.cluster_id<-unique(reference.table.scaffold$cluster_id)
#find all unique scaffolds in comparison table with that cluster_id
comp.scaffold<-analysis.table.comparison%>%filter(.,cluster_id==ref.cluster_id)
comp.scaffold<-unique(comp.scaffold$species_scaffold)
#for each unique scaffold in comparison table w/ cluster_id
for (c in comp.scaffold){
#isolate genes from that scaffold and compare to original ref scaffold
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold==c)
comparison_absent<-anti_join(reference.table.scaffold,comp.table.scaffold,by="homology_id")
print(c)
}
}
#works line by line but not when looping
comparison_absent<-anti_join(analysis.table.reference,analysis.table.comparison,by="homology_id")
ref.cluster_id
reference.table.scaffold
comp.scaffold
reference="Homo_sapiens"
comparison="Danio_rerio"
#subset cluster.master.table for the reference or comparison animal:
#analysis.table.reference<-filter(cluster.master.table,animal==reference)
#analysis.table.comparison<-filter(cluster.master.table,animal==comparison)
sample.table<-read.table("sample.table.txt",header=TRUE,sep=",")
#remove NAs
analysis.table.reference<-filter(sample.table,animal==reference & !is.na(homology_id))
analysis.table.comparison<-filter(sample.table,animal==comparison & !is.na(homology_id))
#list of unique scaffold ids in reference
ref.scaffold<-unique(analysis.table.reference$species_scaffold)
#for each unique scaffold in the reference table:
for (r in ref.scaffold){
#find cluster id for each scaffold
reference.table.scaffold<-analysis.table.reference%>%filter(.,species_scaffold==r)
ref.cluster_id<-unique(reference.table.scaffold$cluster_id)
#find all unique scaffolds in comparison table with that cluster_id
comp.scaffold<-analysis.table.comparison%>%filter(.,cluster_id==ref.cluster_id)
comp.scaffold<-unique(comp.scaffold$species_scaffold)
#for each unique scaffold in comparison table w/ cluster_id
for (c in comp.scaffold){
#isolate genes from that scaffold and compare to original ref scaffold
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold==c)
comparison_absent<-anti_join(reference.table.scaffold,comp.table.scaffold,by="homology_id")
print(c)
}
}
#works line by line but not when looping
comparison_absent<-anti_join(analysis.table.reference,analysis.table.comparison,by="homology_id")
View(comparison_absent)
reference="Homo_sapiens"
comparison="Danio_rerio"
#subset cluster.master.table for the reference or comparison animal:
#analysis.table.reference<-filter(cluster.master.table,animal==reference)
#analysis.table.comparison<-filter(cluster.master.table,animal==comparison)
sample.table<-read.table("sample.table.txt",header=TRUE,sep=",")
#remove NAs
analysis.table.reference<-filter(sample.table,animal==reference & !is.na(homology_id))
analysis.table.comparison<-filter(sample.table,animal==comparison & !is.na(homology_id))
#list of unique scaffold ids in reference
ref.scaffold<-unique(analysis.table.reference$species_scaffold)
#for each unique scaffold in the reference table:
for (r in ref.scaffold){
#find cluster id for each scaffold
reference.table.scaffold<-analysis.table.reference%>%filter(.,species_scaffold==r)
ref.cluster_id<-unique(reference.table.scaffold$cluster_id)
#find all unique scaffolds in comparison table with that cluster_id
comp.scaffold<-analysis.table.comparison%>%filter(.,cluster_id==ref.cluster_id)
comp.scaffold<-unique(comp.scaffold$species_scaffold)
#for each unique scaffold in comparison table w/ cluster_id
for (c in comp.scaffold){
#isolate genes from that scaffold and compare to original ref scaffold
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold==c)
comparison_absent<-anti_join(reference.table.scaffold,comp.table.scaffold,by="homology_id")%>%mutate(.,comp_scaff=c)
print(c)
}
}
#works line by line but not when looping
comparison_absent<-anti_join(analysis.table.reference,analysis.table.comparison,by="homology_id")
View(comparison_absent)
c
mutate(comparison_absent,comp_scaff=c)
reference="Homo_sapiens"
comparison="Danio_rerio"
#subset cluster.master.table for the reference or comparison animal:
#analysis.table.reference<-filter(cluster.master.table,animal==reference)
#analysis.table.comparison<-filter(cluster.master.table,animal==comparison)
sample.table<-read.table("sample.table.txt",header=TRUE,sep=",")
#remove NAs
analysis.table.reference<-filter(sample.table,animal==reference & !is.na(homology_id))
analysis.table.comparison<-filter(sample.table,animal==comparison & !is.na(homology_id))
#list of unique scaffold ids in reference
ref.scaffold<-unique(analysis.table.reference$species_scaffold)
#for each unique scaffold in the reference table:
for (r in ref.scaffold){
#find cluster id for each scaffold
reference.table.scaffold<-analysis.table.reference%>%filter(.,species_scaffold==r)
ref.cluster_id<-unique(reference.table.scaffold$cluster_id)
#find all unique scaffolds in comparison table with that cluster_id
comp.scaffold<-analysis.table.comparison%>%filter(.,cluster_id==ref.cluster_id)
comp.scaffold<-unique(comp.scaffold$species_scaffold)
#for each unique scaffold in comparison table w/ cluster_id
for (c in comp.scaffold){
#isolate genes from that scaffold and compare to original ref scaffold
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold==c)
comparison_absent<-anti_join(reference.table.scaffold,comp.table.scaffold,by="homology_id")
comparison_absent<-mutate(comparison_absent,comp_scaff=c)
print(c)
}
}
#works line by line but not when looping
comparison_absent<-anti_join(analysis.table.reference,analysis.table.comparison,by="homology_id")
View(comparison_absent)
c
reference="Homo_sapiens"
comparison="Danio_rerio"
#subset cluster.master.table for the reference or comparison animal:
#analysis.table.reference<-filter(cluster.master.table,animal==reference)
#analysis.table.comparison<-filter(cluster.master.table,animal==comparison)
sample.table<-read.table("sample.table.txt",header=TRUE,sep=",")
#remove NAs
analysis.table.reference<-filter(sample.table,animal==reference & !is.na(homology_id))
analysis.table.comparison<-filter(sample.table,animal==comparison & !is.na(homology_id))
#list of unique scaffold ids in reference
ref.scaffold<-unique(analysis.table.reference$species_scaffold)
#for each unique scaffold in the reference table:
for (r in ref.scaffold){
#find cluster id for each scaffold
reference.table.scaffold<-analysis.table.reference%>%filter(.,species_scaffold==r)
ref.cluster_id<-unique(reference.table.scaffold$cluster_id)
#find all unique scaffolds in comparison table with that cluster_id
comp.scaffold<-analysis.table.comparison%>%filter(.,cluster_id==ref.cluster_id)
comp.scaffold<-unique(comp.scaffold$species_scaffold)
#for each unique scaffold in comparison table w/ cluster_id
for (c in comp.scaffold){
#isolate genes from that scaffold and compare to original ref scaffold
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold==c)
comparison_absent<-anti_join(reference.table.scaffold,comp.table.scaffold,by="homology_id")
mutate(comparison_absent,comp_scaff=c)
print(c)
}
}
#works line by line but not when looping
comparison_absent<-anti_join(analysis.table.reference,analysis.table.comparison,by="homology_id")
c
comp.scaffold
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold==1_Danio_rerio)
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold==1_"Danio_rerio")
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold=="1_Danio_rerio")
omparison_absent<-anti_join(reference.table.scaffold,comp.table.scaffold,by="homology_id")
comparison_absent<-anti_join(reference.table.scaffold,comp.table.scaffold,by="homology_id")
View(comparison_absent)
comparison_absent<-mutate(comparison_absent,comp_scaff=c)
View(comparison_absent)
copm.scaffold
comp.scaffold
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold=="11_Danio_rerio")
comparison_absent<-anti_join(reference.table.scaffold,comp.table.scaffold,by="homology_id")
comparison_absent<-mutate(comparison_absent,comp_scaff="comparison_absent<-mutate(comparison_absent,comp_scaff=c)")
View(comparison_absent)
comp.scaffold
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold=="1_Danio_rerio")
comparison_absent<-anti_join(reference.table.scaffold,comp.table.scaffold,by="homology_id")
omparison_absent<-mutate(comparison_absent,comp_scaff="omparison_absent<-mutate(comparison_absent,comp_scaff=c)")
c=1_Danio_rerio"
c<-"1_Danio_rerio""
""
c<-"1_Danio_rerio"
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold==c)
comparison_absent<-anti_join(reference.table.scaffold,comp.table.scaffold,by="homology_id")
comparison_absent<-mutate(comparison_absent,comp_scaff=c)
View(comparison_absent
)
result<-rbind(result,comparison_absent)
result<-data.frame()
result<-rbind(result,comparison_absent)
result
reference="Homo_sapiens"
comparison="Danio_rerio"
result<-data.frame()
#subset cluster.master.table for the reference or comparison animal:
#analysis.table.reference<-filter(cluster.master.table,animal==reference)
#analysis.table.comparison<-filter(cluster.master.table,animal==comparison)
sample.table<-read.table("sample.table.txt",header=TRUE,sep=",")
#remove NAs
analysis.table.reference<-filter(sample.table,animal==reference & !is.na(homology_id))
analysis.table.comparison<-filter(sample.table,animal==comparison & !is.na(homology_id))
#list of unique scaffold ids in reference
ref.scaffold<-unique(analysis.table.reference$species_scaffold)
#for each unique scaffold in the reference table:
for (r in ref.scaffold){
#find cluster id for each scaffold
reference.table.scaffold<-analysis.table.reference%>%filter(.,species_scaffold==r)
ref.cluster_id<-unique(reference.table.scaffold$cluster_id)
#find all unique scaffolds in comparison table with that cluster_id
comp.scaffold<-analysis.table.comparison%>%filter(.,cluster_id==ref.cluster_id)
comp.scaffold<-unique(comp.scaffold$species_scaffold)
#for each unique scaffold in comparison table w/ cluster_id
for (c in comp.scaffold){
#isolate genes from that scaffold and compare to original ref scaffold
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold==c)
comparison_absent<-anti_join(reference.table.scaffold,comp.table.scaffold,by="homology_id")
comparison_absent<-mutate(comparison_absent,comp_scaff=c)
result<-rbind(result,comparison_absent)
}
}
#works line by line but not when looping
comparison_absent<-anti_join(analysis.table.reference,analysis.table.comparison,by="homology_id")
View(result)
reference="Homo_sapiens"
comparison="Danio_rerio"
result<-data.frame()
#subset cluster.master.table for the reference or comparison animal; remove NAs
#analysis.table.reference<-filter(cluster.master.tabl,animal==reference & !is.na(homology_id))
#analysis.table.comparison<-filter(cluster.master.tabl,animal==comparison & !is.na(homology_id))
#for sample run:
sample.table<-read.table("sample.table.txt",header=TRUE,sep=",")
analysis.table.reference<-filter(sample.table,animal==reference & !is.na(homology_id))
analysis.table.comparison<-filter(sample.table,animal==comparison & !is.na(homology_id))
#list of unique scaffold ids in reference
ref.scaffold<-unique(analysis.table.reference$species_scaffold)
#for each unique scaffold in the reference table:
for (r in ref.scaffold){
#find cluster id for each scaffold
reference.table.scaffold<-analysis.table.reference%>%filter(.,species_scaffold==r)
ref.cluster_id<-unique(reference.table.scaffold$cluster_id)
#find all unique scaffolds in comparison table with that cluster_id
comp.scaffold<-analysis.table.comparison%>%filter(.,cluster_id==ref.cluster_id)
comp.scaffold<-unique(comp.scaffold$species_scaffold)
#for each unique scaffold in comparison table w/ cluster_id
for (c in comp.scaffold){
#isolate genes from that scaffold and compare to original ref scaffold
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold==c)
comparison_absent<-anti_join(reference.table.scaffold,comp.table.scaffold,by="homology_id")
comparison_absent<-mutate(comparison_absent,comp_scaff=c)
result<-rbind(result,comparison_absent)
}
}
#works line by line but not when looping
comparison_absent<-anti_join(analysis.table.reference,analysis.table.comparison,by="homology_id")
View(result)
reference="Homo_sapiens"
comparison="Danio_rerio"
result<-data.frame()
#subset cluster.master.table for the reference or comparison animal; remove NAs
analysis.table.reference<-filter(cluster.master.tabl,animal==reference & !is.na(homology_id))
reference="Homo_sapiens"
comparison="Danio_rerio"
result<-data.frame()
#subset cluster.master.table for the reference or comparison animal; remove NAs
analysis.table.reference<-filter(cluster.master.table,animal==reference & !is.na(homology_id))
analysis.table.comparison<-filter(cluster.master.table,animal==comparison & !is.na(homology_id))
#for sample run:
sample.table<-read.table("sample.table.txt",header=TRUE,sep=",")
#analysis.table.reference<-filter(sample.table,animal==reference & !is.na(homology_id))
#analysis.table.comparison<-filter(sample.table,animal==comparison & !is.na(homology_id))
#list of unique scaffold ids in reference
ref.scaffold<-unique(analysis.table.reference$species_scaffold)
#for each unique scaffold in the reference table:
for (r in ref.scaffold){
#find cluster id for each scaffold
reference.table.scaffold<-analysis.table.reference%>%filter(.,species_scaffold==r)
ref.cluster_id<-unique(reference.table.scaffold$cluster_id)
#find all unique scaffolds in comparison table with that cluster_id
comp.scaffold<-analysis.table.comparison%>%filter(.,cluster_id==ref.cluster_id)
comp.scaffold<-unique(comp.scaffold$species_scaffold)
#for each unique scaffold in comparison table w/ cluster_id
for (c in comp.scaffold){
#isolate genes from that scaffold and compare to original ref scaffold
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold==c)
comparison_absent<-anti_join(reference.table.scaffold,comp.table.scaffold,by="homology_id")
comparison_absent<-mutate(comparison_absent,comp_scaff=c)
result<-rbind(result,comparison_absent)
}
}
#works line by line but not when looping
comparison_absent<-anti_join(analysis.table.reference,analysis.table.comparison,by="homology_id")
View(result)
reference="Homo_sapiens"
comparison="Danio_rerio"
result<-data.frame()
#subset cluster.master.table for the reference or comparison animal; remove NAs
#analysis.table.reference<-filter(cluster.master.table,animal==reference & !is.na(homology_id))
#analysis.table.comparison<-filter(cluster.master.table,animal==comparison & !is.na(homology_id))
#for sample run:
sample.table<-read.table("sample.table.txt",header=TRUE,sep=",")
analysis.table.reference<-filter(sample.table,animal==reference & !is.na(homology_id))
analysis.table.comparison<-filter(sample.table,animal==comparison & !is.na(homology_id))
#list of unique scaffold ids in reference
ref.scaffold.list<-unique(analysis.table.reference$species_scaffold)
#for each unique scaffold in the reference table:
for (r in ref.scaffold.list){
#find cluster id for each scaffold
reference.table.scaffold<-analysis.table.reference%>%filter(.,species_scaffold==r)
ref.cluster_id<-unique(reference.table.scaffold$cluster_id)
#find all unique scaffolds in comparison table with that cluster_id
comp.scaffold<-analysis.table.comparison%>%filter(.,cluster_id==ref.cluster_id)
comp.scaffold<-unique(comp.scaffold$species_scaffold)
#for each unique scaffold in comparison table w/ cluster_id
for (c in comp.scaffold){
#isolate genes from that scaffold and compare to original ref scaffold
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold==c)
comparison_absent<-anti_join(reference.table.scaffold,comp.table.scaffold,by="homology_id")
comparison_absent<-mutate(comparison_absent,comp_scaff=c)
result<-rbind(result,comparison_absent)
}
}
#works line by line but not when looping
comparison_absent<-anti_join(analysis.table.reference,analysis.table.comparison,by="homology_id")
View(result)
reference="Homo_sapiens"
comparison="Danio_rerio"
result<-data.frame()
#subset cluster.master.table for the reference or comparison animal; remove NAs
#analysis.table.reference<-filter(cluster.master.table,animal==reference & !is.na(homology_id))
#analysis.table.comparison<-filter(cluster.master.table,animal==comparison & !is.na(homology_id))
#for sample run:
sample.table<-read.table("sample.table.txt",header=TRUE,sep=",")
analysis.table.reference<-filter(sample.table,animal==reference & !is.na(homology_id))
analysis.table.comparison<-filter(sample.table,animal==comparison & !is.na(homology_id))
#list of unique scaffold ids in reference
ref.scaffold.list<-unique(analysis.table.reference$species_scaffold)
#for each unique scaffold in the reference table:
for (r in ref.scaffold.list){
#find cluster id for each scaffold
reference.table.scaffold<-analysis.table.reference%>%filter(.,species_scaffold==r)
ref.cluster_id<-unique(reference.table.scaffold$cluster_id)
#find all unique scaffolds in comparison table with that cluster_id
comp.scaffold.list<-analysis.table.comparison%>%filter(.,cluster_id==ref.cluster_id)
comp.scaffold.list<-unique(comp.scaffold$species_scaffold)
#for each unique scaffold in comparison table w/ cluster_id
for (c in comp.scaffold.list){
#isolate genes from that scaffold and compare to original ref scaffold
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold==c)
comparison_absent<-anti_join(reference.table.scaffold,comp.table.scaffold,by="homology_id")
comparison_absent<-mutate(comparison_absent,comp_scaff=c)
result<-rbind(result,comparison_absent)
}
}
reference="Homo_sapiens"
comparison="Danio_rerio"
result<-data.frame()
#subset cluster.master.table for the reference or comparison animal; remove NAs
#analysis.table.reference<-filter(cluster.master.table,animal==reference & !is.na(homology_id))
#analysis.table.comparison<-filter(cluster.master.table,animal==comparison & !is.na(homology_id))
#for sample run:
sample.table<-read.table("sample.table.txt",header=TRUE,sep=",")
analysis.table.reference<-filter(sample.table,animal==reference & !is.na(homology_id))
analysis.table.comparison<-filter(sample.table,animal==comparison & !is.na(homology_id))
#list of unique scaffold ids in reference
ref.scaffold.list<-unique(analysis.table.reference$species_scaffold)
#for each unique scaffold in the reference table:
for (r in ref.scaffold.list){
#find cluster id for each scaffold
reference.table.scaffold<-analysis.table.reference%>%filter(.,species_scaffold==r)
ref.cluster_id<-unique(reference.table.scaffold$cluster_id)
#find all unique scaffolds in comparison table with that cluster_id
comp.scaffold<-analysis.table.comparison%>%filter(.,cluster_id==ref.cluster_id)
comp.scaffold<-unique(comp.scaffold$species_scaffold)
#for each unique scaffold in comparison table w/ cluster_id
for (c in comp.scaffold){
#isolate genes from that scaffold and compare to original ref scaffold
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold==c)
comparison_absent<-anti_join(reference.table.scaffold,comp.table.scaffold,by="homology_id")
comparison_absent<-mutate(comparison_absent,comp_scaff=c)
result<-rbind(result,comparison_absent)
}
}
#works line by line but not when looping
comparison_absent<-anti_join(analysis.table.reference,analysis.table.comparison,by="homology_id")
