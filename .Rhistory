filter_target=c("Homo_sapiens","Danio_rerio","Drosophila_melanogaster")
master.table<-filter(master.table, animal==filter_target)
#There are human gene names in pep files that are not anywhere in gff3 files = inner_join
#Scaffold names may not be unique but must be - join seqid and catalog id
final.master.table_cluster<-inner_join(master.table,agalma.homologs)%>%dplyr::select(.,seqid,start,end,gene,homology_id,catalog_id,animal)%>%mutate(species_scaffold=str_c(seqid,animal,sep="_"))%>%dplyr::select(.,species_scaffold,homology_id,gene)
#make contingency table
contingency<-table(final.master.table_cluster$species_scaffold,final.master.table_cluster$homology_id)%>%as.matrix()
contingency<-1*(contingency>0)
#dissimilarity matrix
dist.matrix<-daisy(contingency,metric="gower",stand=FALSE)
#cluster
#ag<-agnes(dist.matrix,diss=TRUE)
#plot(ag)
cross.clust<-cc_crossclustering(dist.matrix,out=FALSE)
clust<-cc_get_cluster(cross.clust)
#plot the clustering
#see code from http://dpmartin42.github.io/posts/r/cluster-mixed-types
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE)
#must run previous chunk first
#Take a subset! Otherwise following code will not complete running and freeze everything!!!
filter_target=c("Homo_sapiens","Danio_rerio","Drosophila_melanogaster")
master.table<-filter(master.table, animal==filter_target)
#There are human gene names in pep files that are not anywhere in gff3 files = inner_join
#Scaffold names may not be unique but must be - join seqid and catalog id
final.master.table_cluster<-inner_join(master.table,agalma.homologs)%>%dplyr::select(.,seqid,start,end,gene,homology_id,catalog_id,animal)%>%mutate(species_scaffold=str_c(seqid,animal,sep="_"))%>%dplyr::select(.,species_scaffold,homology_id,gene)
#make contingency table
contingency<-table(final.master.table_cluster$species_scaffold,final.master.table_cluster$homology_id)%>%as.matrix()
contingency<-1*(contingency>0)
#dissimilarity matrix
dist.matrix<-daisy(contingency,metric="gower",stand=FALSE)
#cluster
#ag<-agnes(dist.matrix,diss=TRUE)
#plot(ag)
cross.clust<-cc_crossclustering(dist.matrix,out=FALSE)
clust<-cc_get_cluster(cross.clust)
#plot the clustering
#see code from http://dpmartin42.github.io/posts/r/cluster-mixed-types
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE)
#must run previous chunk first
#Take a subset! Otherwise following code will not complete running and freeze everything!!!
filter_target=c("Homo_sapiens","Danio_rerio")
master.table<-filter(master.table, animal==filter_target)
#There are human gene names in pep files that are not anywhere in gff3 files = inner_join
#Scaffold names may not be unique but must be - join seqid and catalog id
final.master.table_cluster<-inner_join(master.table,agalma.homologs)%>%dplyr::select(.,seqid,start,end,gene,homology_id,catalog_id,animal)%>%mutate(species_scaffold=str_c(seqid,animal,sep="_"))%>%dplyr::select(.,species_scaffold,homology_id,gene)
#make contingency table
contingency<-table(final.master.table_cluster$species_scaffold,final.master.table_cluster$homology_id)%>%as.matrix()
contingency<-1*(contingency>0)
#dissimilarity matrix
dist.matrix<-daisy(contingency,metric="gower",stand=FALSE)
#cluster
#ag<-agnes(dist.matrix,diss=TRUE)
#plot(ag)
cross.clust<-cc_crossclustering(dist.matrix,out=FALSE)
clust<-cc_get_cluster(cross.clust)
#plot the clustering
#see code from http://dpmartin42.github.io/posts/r/cluster-mixed-types
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE)
nrow(master.table)
clust
#must run previous chunk first
#Take a subset! Otherwise following code will not complete running and freeze everything!!!
filter_target=c("Homo_sapiens","Danio_rerio","Drosophila_melanogaster")
master.table<-filter(master.table, animal==filter_target)
#There are human gene names in pep files that are not anywhere in gff3 files = inner_join
#Scaffold names may not be unique but must be - join seqid and catalog id
final.master.table_cluster<-inner_join(master.table,agalma.homologs)%>%dplyr::select(.,seqid,start,end,gene,homology_id,catalog_id,animal)%>%mutate(species_scaffold=str_c(seqid,animal,sep="_"))%>%dplyr::select(.,species_scaffold,homology_id,gene)
#make contingency table
contingency<-table(final.master.table_cluster$species_scaffold,final.master.table_cluster$homology_id)%>%as.matrix()
contingency<-1*(contingency>0)
#dissimilarity matrix
dist.matrix<-daisy(contingency,metric="gower",stand=FALSE)
#cluster
#ag<-agnes(dist.matrix,diss=TRUE)
#plot(ag)
cross.clust<-cc_crossclustering(dist.matrix,out=FALSE)
clust<-cc_get_cluster(cross.clust)
#plot the clustering
#see code from http://dpmartin42.github.io/posts/r/cluster-mixed-types
#adjust perplexity if get error "perplexity is too large for the number of samples"
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=25)
#plot the clustering
#see code from http://dpmartin42.github.io/posts/r/cluster-mixed-types
#adjust perplexity if get error "perplexity is too large for the number of samples"
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=15)
tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(clust))
ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
nrow(dist.matrix)
dist.matrix
View(dist.matrix)
nrow(contingency)
#must run previous chunk first
#Take a subset! Otherwise following code will not complete running and freeze everything!!!
filter_target=c("Homo_sapiens","Danio_rerio","Strongylocentrotus_purpuratus")
master.table<-filter(master.table, animal==filter_target)
#There are human gene names in pep files that are not anywhere in gff3 files = inner_join
#Scaffold names may not be unique but must be - join seqid and catalog id
final.master.table_cluster<-inner_join(master.table,agalma.homologs)%>%dplyr::select(.,seqid,start,end,gene,homology_id,catalog_id,animal)%>%mutate(species_scaffold=str_c(seqid,animal,sep="_"))%>%dplyr::select(.,species_scaffold,homology_id,gene)
#make contingency table
contingency<-table(final.master.table_cluster$species_scaffold,final.master.table_cluster$homology_id)%>%as.matrix()
contingency<-1*(contingency>0)
#dissimilarity matrix
dist.matrix<-daisy(contingency,metric="gower",stand=FALSE)
#cluster
#ag<-agnes(dist.matrix,diss=TRUE)
#plot(ag)
cross.clust<-cc_crossclustering(dist.matrix,out=FALSE)
clust<-cc_get_cluster(cross.clust)
#plot the clustering
#see code from http://dpmartin42.github.io/posts/r/cluster-mixed-types
#adjust perplexity if get error "perplexity is too large for the number of samples"
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=15)
clust
#must run previous chunk first
#Take a subset! Otherwise following code will not complete running and freeze everything!!!
filter_target=c("Homo_sapiens","Danio_rerio","Strongylocentrotus_purpuratus")
master.table<-filter(master.table, animal==filter_target)
#There are human gene names in pep files that are not anywhere in gff3 files = inner_join
#Scaffold names may not be unique but must be - join seqid and catalog id
final.master.table_cluster<-inner_join(master.table,agalma.homologs)%>%dplyr::select(.,seqid,start,end,gene,homology_id,catalog_id,animal)%>%mutate(species_scaffold=str_c(seqid,animal,sep="_"))%>%dplyr::select(.,species_scaffold,homology_id,gene)
#make contingency table
contingency<-table(final.master.table_cluster$species_scaffold,final.master.table_cluster$homology_id)%>%as.matrix()
contingency<-1*(contingency>0)
#dissimilarity matrix
dist.matrix<-daisy(contingency,metric="gower",stand=FALSE)
#cluster
#ag<-agnes(dist.matrix,diss=TRUE)
#plot(ag)
cross.clust<-cc_crossclustering(dist.matrix,out=FALSE)
clust<-cc_get_cluster(cross.clust)
#plot the clustering
#see code from http://dpmartin42.github.io/posts/r/cluster-mixed-types
#adjust perplexity if get error "perplexity is too large for the number of samples"
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=10)
#must run previous chunk first
#Take a subset! Otherwise following code will not complete running and freeze everything!!!
filter_target=c("Homo_sapiens","Danio_rerio","Taeniopygia_guttata")
master.table<-filter(master.table, animal==filter_target)
#There are human gene names in pep files that are not anywhere in gff3 files = inner_join
#Scaffold names may not be unique but must be - join seqid and catalog id
final.master.table_cluster<-inner_join(master.table,agalma.homologs)%>%dplyr::select(.,seqid,start,end,gene,homology_id,catalog_id,animal)%>%mutate(species_scaffold=str_c(seqid,animal,sep="_"))%>%dplyr::select(.,species_scaffold,homology_id,gene)
#make contingency table
contingency<-table(final.master.table_cluster$species_scaffold,final.master.table_cluster$homology_id)%>%as.matrix()
contingency<-1*(contingency>0)
#dissimilarity matrix
dist.matrix<-daisy(contingency,metric="gower",stand=FALSE)
#cluster
#ag<-agnes(dist.matrix,diss=TRUE)
#plot(ag)
cross.clust<-cc_crossclustering(dist.matrix,out=FALSE)
clust<-cc_get_cluster(cross.clust)
#plot the clustering
#see code from http://dpmartin42.github.io/posts/r/cluster-mixed-types
#adjust perplexity if get error "perplexity is too large for the number of samples"
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=5)
#must run previous chunk first
#Take a subset! Otherwise following code will not complete running and freeze everything!!!
filter_target=c("Homo_sapiens","Danio_rerio","Taeniopygia_guttata")
master.table<-filter(master.table, animal==filter_target)
#There are human gene names in pep files that are not anywhere in gff3 files = inner_join
#Scaffold names may not be unique but must be - join seqid and catalog id
final.master.table_cluster<-inner_join(master.table,agalma.homologs)%>%dplyr::select(.,seqid,start,end,gene,homology_id,catalog_id,animal)%>%mutate(species_scaffold=str_c(seqid,animal,sep="_"))%>%dplyr::select(.,species_scaffold,homology_id,gene)
#make contingency table
contingency<-table(final.master.table_cluster$species_scaffold,final.master.table_cluster$homology_id)%>%as.matrix()
contingency<-1*(contingency>0)
#dissimilarity matrix
dist.matrix<-daisy(contingency,metric="gower",stand=FALSE)
#cluster
#ag<-agnes(dist.matrix,diss=TRUE)
#plot(ag)
cross.clust<-cc_crossclustering(dist.matrix,out=FALSE)
#must run previous chunk first
#Take a subset! Otherwise following code will not complete running and freeze everything!!!
filter_target=c("Homo_sapiens","Danio_rerio","Taeniopygia_guttata")
master.table<-filter(master.table, animal==filter_target)
#There are human gene names in pep files that are not anywhere in gff3 files = inner_join
#Scaffold names may not be unique but must be - join seqid and catalog id
final.master.table_cluster<-inner_join(master.table,agalma.homologs)%>%dplyr::select(.,seqid,start,end,gene,homology_id,catalog_id,animal)%>%mutate(species_scaffold=str_c(seqid,animal,sep="_"))%>%dplyr::select(.,species_scaffold,homology_id,gene)
#make contingency table
contingency<-table(final.master.table_cluster$species_scaffold,final.master.table_cluster$homology_id)%>%as.matrix()
contingency<-1*(contingency>0)
#dissimilarity matrix
dist.matrix<-daisy(contingency,metric="gower",stand=FALSE)
#cluster
#ag<-agnes(dist.matrix,diss=TRUE)
#plot(ag)
cross.clust<-cc_crossclustering(dist.matrix,out=FALSE)
nrow(contingency)
View(contingency)
#must run previous chunk first
#Take a subset! Otherwise following code will not complete running and freeze everything!!!
filter_target=c("Homo_sapiens","Danio_rerio","Lottia_gigantea")
master.table<-filter(master.table, animal==filter_target)
filter_target
View(mater.table)
View(master.table)
###CHANGE AGALMA CSV, animal ids
#set up empty df to rbind to
all.df<-data.frame(matrix(ncol=5,nrow=0))
names<-c("seqid","type","start","end","attributes")
colnames(all.df)<-names
#set up file names to loop through
gff3_dir="data/genomes/gff3/"
gff3=c("Amphimedon_queenslandica.Aqu1.42.gff3","Capitella_teleta.Capitella_teleta_v1.0.42.gff3","Danio_rerio.GRCz11.95.gff3","Drosophila_melanogaster.BDGP6.95.gff3","Helobdella_robusta.Helro1.42.gff3","Homo_sapiens.GRCh38.95.gff3","Lottia_gigantea.Lotgi1.42.gff3","Mnemiopsis_leidyi.MneLei_Aug2011.42.gff3","Nematostella_vectensis.ASM20922v1.42.gff3","Strongylocentrotus_purpuratus.Spur_3.1.42.gff3","Taeniopygia_guttata.taeGut3.2.4.95.gff3","Trichoplax_adhaerens.ASM15027v1.42.gff3")
for (blah in gff3)
{
gff3_path<-paste0(gff3_dir,blah)
contig.gene.df <- ape::read.gff(file=gff3_path, GFF3=TRUE) %>% dplyr::select(.,"seqid","type","start","end","attributes") %>% filter(.,type == "gene")
all.df<-bind_rows(all.df,contig.gene.df)
}
#Parse out the gene_id from the attributes
all.df$gene<-gsub(".*gene_id=(.*?);.*","\\1",all.df$attributes)
#Begin contstruction of MASTAAA! table.
master.table<-select(all.df,"seqid","start","end","gene")
#need to add animal ids
master.table$animal<-c(rep.int("Amphimedon_queenslandica",43615),rep.int("Capitella_telata",32175),rep.int("Danio_rerio",25606),rep.int("Drosophila_melanogaster",13931),rep.int("Helobdella_robusta",23432),rep.int("Homo_sapiens",21492),rep.int("Lottia_gigantea",23349),rep.int("Mnemiopsis_leidyi",16559),rep.int("Nematostella_vectensis",24773),rep.int("Strongylocentrotus_purpuratus",28987),rep.int("Taeniopygia_guttata",17488),rep.int("Trichoplax_adhaerens",11520))
write.csv(master.table,"master.table.csv",quote=FALSE,row.names=FALSE)
#Read in amalga homologs csv
agalma.homologs<-read.csv("relaxedbit_results.csv",header=TRUE,sep=",")
#left join because need to know which genes have no homology too.
final.master.table<-left_join(master.table,agalma.homologs)%>%select(.,"seqid","start","end","gene","homology_id","catalog_id","animal")
write.csv(final.master.table,"final.master.table_absentgenes.csv",quote=FALSE,row.names=FALSE)
#double check that there are no duplicate genes in final.master.table
#duplicated(final.master.table$gene)%>%table()
#must run previous chunk first
#Take a subset! Otherwise following code will not complete running and freeze everything!!!
filter_target=c("Homo_sapiens","Danio_rerio","Lottia_gigantea")
master.table<-filter(master.table, animal==filter_target)
#There are human gene names in pep files that are not anywhere in gff3 files = inner_join
#Scaffold names may not be unique but must be - join seqid and catalog id
final.master.table_cluster<-inner_join(master.table,agalma.homologs)%>%dplyr::select(.,seqid,start,end,gene,homology_id,catalog_id,animal)%>%mutate(species_scaffold=str_c(seqid,animal,sep="_"))%>%dplyr::select(.,species_scaffold,homology_id,gene)
#make contingency table
contingency<-table(final.master.table_cluster$species_scaffold,final.master.table_cluster$homology_id)%>%as.matrix()
contingency<-1*(contingency>0)
#dissimilarity matrix
dist.matrix<-daisy(contingency,metric="gower",stand=FALSE)
#cluster
#ag<-agnes(dist.matrix,diss=TRUE)
#plot(ag)
cross.clust<-cc_crossclustering(dist.matrix,out=FALSE)
nrow(final.master.table_cluster)
nrow(contingency)
View(master.table)
View(final.master.table_cluster)
nrow(unique(final.master.table_cluster$species_scaffold))
unique(final.master.table)cluster$species_scaffold
unique(final.master.table$cluster$species_scaffold)
distinct(final.master.table$cluster$species_scaffold)
final.master.table_cluster$species_scaffold
final.master.table_cluster$species_scaffold%>%distinct()
table(final.master.table_cluster$species_scaffold)
View(table(final.master.table_cluster$species_scaffold))
nrow(final.master.table)
nrow(contingency)
#must run previous chunk first
#Take a subset! Otherwise following code will not complete running and freeze everything!!!
filter_target=c("Homo_sapiens","Danio_rerio")
master.table<-filter(master.table, animal==filter_target)
#There are human gene names in pep files that are not anywhere in gff3 files = inner_join
#Scaffold names may not be unique but must be - join seqid and catalog id
final.master.table_cluster<-inner_join(master.table,agalma.homologs)%>%dplyr::select(.,seqid,start,end,gene,homology_id,catalog_id,animal)%>%mutate(species_scaffold=str_c(seqid,animal,sep="_"))%>%dplyr::select(.,species_scaffold,homology_id,gene)
#make contingency table
contingency<-table(final.master.table_cluster$species_scaffold,final.master.table_cluster$homology_id)%>%as.matrix()
contingency<-1*(contingency>0)
#dissimilarity matrix
dist.matrix<-daisy(contingency,metric="gower",stand=FALSE)
#cluster
#ag<-agnes(dist.matrix,diss=TRUE)
#plot(ag)
cross.clust<-cc_crossclustering(dist.matrix,out=FALSE)
clust<-cc_get_cluster(cross.clust)
#plot the clustering
#see code from http://dpmartin42.github.io/posts/r/cluster-mixed-types
#adjust perplexity if get error "perplexity is too large for the number of samples"
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=30)
tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(clust))
ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
#put together the scaffold:cluster dataframe
clust.df<-as.data.frame(clust)
colnames(clust.df)<-"cluster_id"
clust.df<-mutate(clust.df,species_scaffold=row.names(contingency))
cluster.master.table<-final.master.table%>%mutate(species_scaffold=str_c(seqid,animal,sep="_"))%>%left_join(.,clust.df,by="species_scaffold")%>%select(.,species_scaffold,start,end,gene,homology_id,animal,cluster_id)
#Add an index to each species
cluster.master.table<-cluster.master.table%>%mutate(species_index=case_when(animal=="Amphimedon_queenslandica"~1,animal=="Mnemiopsis_leidyi"~1,animal=="Trichoplax_adhaerens"~2,animal=="Nematostella_vectensis"~3,animal=="Capitella_telata"~4,animal=="Helobdella_robusta"~4,animal=="Lottia_gigantea"~4,animal=="Drosophila_melanogaster"~4,animal=="Strongylocentrotus_purpuratus"~4,animal=="Danio_rerio"~4,animal=="Taeniopygia_guttata"~5,animal=="Homo_sapiens"~6))
write.csv(cluster.master.table,"cluster.master.table.csv",quote=FALSE,row.names=FALSE)
#must run previous chunk first
#Take a subset! Otherwise following code will not complete running and freeze everything!!!
filter_target=c("Homo_sapiens","Danio_rerio","Taeniopygia_guttata")
master.table<-filter(master.table, animal==filter_target)
#There are human gene names in pep files that are not anywhere in gff3 files = inner_join
#Scaffold names may not be unique but must be - join seqid and catalog id
final.master.table_cluster<-inner_join(master.table,agalma.homologs)%>%dplyr::select(.,seqid,start,end,gene,homology_id,catalog_id,animal)%>%mutate(species_scaffold=str_c(seqid,animal,sep="_"))%>%dplyr::select(.,species_scaffold,homology_id,gene)
#make contingency table
contingency<-table(final.master.table_cluster$species_scaffold,final.master.table_cluster$homology_id)%>%as.matrix()
contingency<-1*(contingency>0)
#dissimilarity matrix
dist.matrix<-daisy(contingency,metric="gower",stand=FALSE)
#cluster
#ag<-agnes(dist.matrix,diss=TRUE)
#plot(ag)
cross.clust<-cc_crossclustering(dist.matrix,out=FALSE)
clust<-cc_get_cluster(cross.clust)
#plot the clustering
#see code from http://dpmartin42.github.io/posts/r/cluster-mixed-types
#adjust perplexity if get error "perplexity is too large for the number of samples"
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE)
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=5)
tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(clust))
ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=20)
tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(clust))
ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=30)
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=25)
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=23)
#adjust perplexity if get error "perplexity is too large for the number of samples"
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=20)
tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(clust))
ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=1)
tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(clust))
ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=2)
tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(clust))
ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=10)
tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(clust))
ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=5)
tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(clust))
ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=4)
tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(clust))
ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=3)
tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(clust))
ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=2)
tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(clust))
ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=1)
tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(clust))
ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=1)
tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(clust))
ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
clust.df<-as.data.frame(clust)
colnames(clust.df)<-"cluster_id"
clust.df<-mutate(clust.df,species_scaffold=row.names(contingency))
cluster.master.table<-final.master.table%>%mutate(species_scaffold=str_c(seqid,animal,sep="_"))%>%left_join(.,clust.df,by="species_scaffold")%>%select(.,species_scaffold,start,end,gene,homology_id,animal,cluster_id)
#Add an index to each species
cluster.master.table<-cluster.master.table%>%mutate(species_index=case_when(animal=="Amphimedon_queenslandica"~1,animal=="Mnemiopsis_leidyi"~1,animal=="Trichoplax_adhaerens"~2,animal=="Nematostella_vectensis"~3,animal=="Capitella_telata"~4,animal=="Helobdella_robusta"~4,animal=="Lottia_gigantea"~4,animal=="Drosophila_melanogaster"~4,animal=="Strongylocentrotus_purpuratus"~4,animal=="Danio_rerio"~4,animal=="Taeniopygia_guttata"~5,animal=="Homo_sapiens"~6))
write.csv(cluster.master.table,"cluster.master.table.csv",quote=FALSE,row.names=FALSE)
reference="Homo_sapiens"
comparison="Danio_rerio"
result<-data.frame()
#subset cluster.master.table for the reference or comparison animal; remove NAs
analysis.table.reference<-filter(cluster.master.table,animal==reference & !is.na(homology_id))
analysis.table.comparison<-filter(cluster.master.table,animal==comparison & !is.na(homology_id))
#for sample run:
#sample.table<-read.table("sample.table.txt",header=TRUE,sep=",")
#analysis.table.reference<-filter(sample.table,animal==reference & !is.na(homology_id))
#analysis.table.comparison<-filter(sample.table,animal==comparison & !is.na(homology_id))
#remove any genes in the analysis.table.reference that are present only in clades that arose after the comparison clade.
#get a list of all unique homology_ids in the analysis table
ref.homolog.list<-unique(analysis.table.reference$homology_id)
#get species_index of comparison animal
comp.species.index<-analysis.table.comparison$species_index[1]
#for each gene in the ref analysis table
for (h in ref.homolog.list){
#select all the rows of that particular genes for all animals (except your comp animal)
check<-filter(sample.table, homology_id==h & animal!=comparison)
#check if any of the species indices in the check table have an index <= comparison index
if( any(check$species_index<=comp.species.index)==FALSE){
#if so, remove all rows with that gene in the analysis.table.reference
analysis.table.reference<-filter(analysis.table.reference,homology_id != h)
}
}
reference="Homo_sapiens"
comparison="Danio_rerio"
result<-data.frame()
#subset cluster.master.table for the reference or comparison animal; remove NAs
analysis.table.reference<-filter(cluster.master.table,animal==reference & !is.na(homology_id))
analysis.table.comparison<-filter(cluster.master.table,animal==comparison & !is.na(homology_id))
#for sample run:
#sample.table<-read.table("sample.table.txt",header=TRUE,sep=",")
#analysis.table.reference<-filter(sample.table,animal==reference & !is.na(homology_id))
#analysis.table.comparison<-filter(sample.table,animal==comparison & !is.na(homology_id))
#remove any genes in the analysis.table.reference that are present only in clades that arose after the comparison clade.
#get a list of all unique homology_ids in the analysis table
ref.homolog.list<-unique(analysis.table.reference$homology_id)
#get species_index of comparison animal
comp.species.index<-analysis.table.comparison$species_index[1]
#for each gene in the ref analysis table
for (h in ref.homolog.list){
#select all the rows of that particular genes for all animals (except your comp animal)
#for sample data:
#check<-filter(sample.table, homology_id==h & animal!=comparison)
check<-filter(cluster.master.table, homology_id==h & animal!=comparison)
#check if any of the species indices in the check table have an index <= comparison index
if( any(check$species_index<=comp.species.index)==FALSE){
#if so, remove all rows with that gene in the analysis.table.reference
analysis.table.reference<-filter(analysis.table.reference,homology_id != h)
}
}
#list of unique scaffold ids in reference
ref.scaffold.list<-unique(analysis.table.reference$species_scaffold)
#for each unique scaffold in the reference table:
for (r in ref.scaffold.list){
#find cluster id for each scaffold
reference.table.scaffold<-analysis.table.reference%>%filter(.,species_scaffold==r)
ref.cluster_id<-unique(reference.table.scaffold$cluster_id)
#find all unique scaffolds in comparison table with that cluster_id
comp.scaffold<-analysis.table.comparison%>%filter(.,cluster_id==ref.cluster_id)
comp.scaffold<-unique(comp.scaffold$species_scaffold)
#for each unique scaffold in comparison table w/ cluster_id
for (c in comp.scaffold){
#isolate genes from that scaffold and compare to original ref scaffold
comp.table.scaffold<-analysis.table.comparison%>%filter(.,species_scaffold==c)
comparison_absent<-anti_join(reference.table.scaffold,comp.table.scaffold,by="homology_id")
comparison_absent<-mutate(comparison_absent,comp_scaff=c)
result<-rbind(result,comparison_absent)
}
}
result
View(result)
View(agalma.homologs)
View(agalma.homologs)
#must run previous chunk first
#Take a subset! Otherwise following code will not complete running and freeze everything!!!
filter_target=c("Homo_sapiens","Danio_rerio","Strongylocentrotus_purpuratus")
master.table<-filter(master.table, animal==filter_target)
#There are human gene names in pep files that are not anywhere in gff3 files = inner_join
#Scaffold names may not be unique but must be - join seqid and catalog id
final.master.table_cluster<-inner_join(master.table,agalma.homologs)%>%dplyr::select(.,seqid,start,end,gene,homology_id,catalog_id,animal)%>%mutate(species_scaffold=str_c(seqid,animal,sep="_"))%>%dplyr::select(.,species_scaffold,homology_id,gene)
#make contingency table
contingency<-table(final.master.table_cluster$species_scaffold,final.master.table_cluster$homology_id)%>%as.matrix()
contingency<-1*(contingency>0)
#dissimilarity matrix
dist.matrix<-daisy(contingency,metric="gower",stand=FALSE)
#cluster
#ag<-agnes(dist.matrix,diss=TRUE)
#plot(ag)
cross.clust<-cc_crossclustering(dist.matrix,out=FALSE)
clust<-cc_get_cluster(cross.clust)
#plot the clustering
#see code from http://dpmartin42.github.io/posts/r/cluster-mixed-types
#adjust perplexity if get error "perplexity is too large for the number of samples"
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=1)
tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(clust))
ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
#put together the scaffold:cluster dataframe
clust.df<-as.data.frame(clust)
colnames(clust.df)<-"cluster_id"
clust.df<-mutate(clust.df,species_scaffold=row.names(contingency))
cluster.master.table<-final.master.table%>%mutate(species_scaffold=str_c(seqid,animal,sep="_"))%>%left_join(.,clust.df,by="species_scaffold")%>%select(.,species_scaffold,start,end,gene,homology_id,animal,cluster_id)
#Add an index to each species
cluster.master.table<-cluster.master.table%>%mutate(species_index=case_when(animal=="Amphimedon_queenslandica"~1,animal=="Mnemiopsis_leidyi"~1,animal=="Trichoplax_adhaerens"~2,animal=="Nematostella_vectensis"~3,animal=="Capitella_telata"~4,animal=="Helobdella_robusta"~4,animal=="Lottia_gigantea"~4,animal=="Drosophila_melanogaster"~4,animal=="Strongylocentrotus_purpuratus"~4,animal=="Danio_rerio"~4,animal=="Taeniopygia_guttata"~5,animal=="Homo_sapiens"~6))
write.csv(cluster.master.table,"cluster.master.table.csv",quote=FALSE,row.names=FALSE)
###CHANGE AGALMA CSV HERE
#set up empty df to rbind to
all.df<-data.frame(matrix(ncol=5,nrow=0))
names<-c("seqid","type","start","end","attributes")
colnames(all.df)<-names
#set up file names to loop through
gff3_dir="data/genomes/gff3/"
gff3=c("Amphimedon_queenslandica.Aqu1.42.gff3","Capitella_teleta.Capitella_teleta_v1.0.42.gff3","Danio_rerio.GRCz11.95.gff3","Drosophila_melanogaster.BDGP6.95.gff3","Helobdella_robusta.Helro1.42.gff3","Homo_sapiens.GRCh38.95.gff3","Lottia_gigantea.Lotgi1.42.gff3","Mnemiopsis_leidyi.MneLei_Aug2011.42.gff3","Nematostella_vectensis.ASM20922v1.42.gff3","Strongylocentrotus_purpuratus.Spur_3.1.42.gff3","Taeniopygia_guttata.taeGut3.2.4.95.gff3","Trichoplax_adhaerens.ASM15027v1.42.gff3")
for (blah in gff3)
{
gff3_path<-paste0(gff3_dir,blah)
contig.gene.df <- ape::read.gff(file=gff3_path, GFF3=TRUE) %>% dplyr::select(.,"seqid","type","start","end","attributes") %>% filter(.,type == "gene")
all.df<-bind_rows(all.df,contig.gene.df)
}
#Parse out the gene_id from the attributes
all.df$gene<-gsub(".*gene_id=(.*?);.*","\\1",all.df$attributes)
#Begin contstruction of MASTAAA! table.
master.table<-select(all.df,"seqid","start","end","gene")
#need to add animal ids
master.table$animal<-c(rep.int("Amphimedon_queenslandica",43615),rep.int("Capitella_telata",32175),rep.int("Danio_rerio",25606),rep.int("Drosophila_melanogaster",13931),rep.int("Helobdella_robusta",23432),rep.int("Homo_sapiens",21492),rep.int("Lottia_gigantea",23349),rep.int("Mnemiopsis_leidyi",16559),rep.int("Nematostella_vectensis",24773),rep.int("Strongylocentrotus_purpuratus",28987),rep.int("Taeniopygia_guttata",17488),rep.int("Trichoplax_adhaerens",11520))
write.csv(master.table,"master.table.csv",quote=FALSE,row.names=FALSE)
#Read in amalga homologs csv
agalma.homologs<-read.csv("relaxedbit_results_alt.csv",header=TRUE,sep=",")
#Read in amalga homologs csv
agalma.homologs<-read.csv("relaxedbit_results_alt.csv",header=TRUE,sep=",")
#left join because need to know which genes have no homology too.
final.master.table<-left_join(master.table,agalma.homologs)%>%select(.,"seqid","start","end","gene","homology_id","catalog_id","animal")
write.csv(final.master.table,"final.master.table_absentgenes.csv",quote=FALSE,row.names=FALSE)
#to double check that there are no duplicate genes in final.master.table:
#duplicated(final.master.table$gene)%>%table()
#must run previous chunk first
#Take a subset! Otherwise following code will not complete running and freeze everything!!!
filter_target=c("Homo_sapiens","Danio_rerio","Strongylocentrotus_purpuratus")
master.table<-filter(master.table, animal==filter_target)
#There are human gene names in pep files that are not anywhere in gff3 files = inner_join
#Scaffold names may not be unique but must be - join seqid and catalog id
final.master.table_cluster<-inner_join(master.table,agalma.homologs)%>%dplyr::select(.,seqid,start,end,gene,homology_id,catalog_id,animal)%>%mutate(species_scaffold=str_c(seqid,animal,sep="_"))%>%dplyr::select(.,species_scaffold,homology_id,gene)
#make contingency table
contingency<-table(final.master.table_cluster$species_scaffold,final.master.table_cluster$homology_id)%>%as.matrix()
contingency<-1*(contingency>0)
#dissimilarity matrix
dist.matrix<-daisy(contingency,metric="gower",stand=FALSE)
#cluster
#ag<-agnes(dist.matrix,diss=TRUE)
#plot(ag)
cross.clust<-cc_crossclustering(dist.matrix,out=FALSE)
View(cluster.master.table)
group_by(cluster.master.table,cluster.master.table$gene)
View(group_by(cluster.master.table,cluster.master.table$gene))
setwd("~/repo/finalproject/")
pep.length.plot<-read.fasta("Amphimedon_queenslandica.Aqu1.pep.all.fa)%>%getLength(.)%>%as.data.frame()%>%filter(.<10000)%>%ggplot()+geom_histogram(aes(x=.), fill="skyblue3", color="black",binwidth=100)+xlab("Scaffold Length")+labs(title="Danio rerio")
pep.length.plot<-read.fasta("Amphimedon_queenslandica.Aqu1.pep.all.fa")%>%getLength("Amphimedon_queenslandica.Aqu1.pep.all.fa")%>%as.data.frame()%>%filter(.<10000)%>%ggplot()+geom_histogram(aes(x=.), fill="skyblue3", color="black",binwidth=100)+xlab("Scaffold Length")+labs(title="Danio rerio")
pep.length.plot<-read.fasta("Amphimedon_queenslandica.Aqu1.pep.all.fa")%>%getLength("Amphimedon_queenslandica.Aqu1.pep.all.fa")%>%as.data.frame()%>%filter%>%ggplot()+geom_histogram(aes(x=.), fill="skyblue3", color="black",binwidth=100)+xlab("Scaffold Length")+labs(title="Danio rerio")
