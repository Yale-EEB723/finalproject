#fasta="data/sample_data/fasta_sample.fasta"
fasta="~/Desktop/compgen/repo/ensembl/genome_fasta/Strongylocentrotus_purpuratus.Spur_3.1.dna.toplevel.fa"
#histogram of call ontig lengths,
scaffold.length.plot<-read.fasta(fasta)%>%getLength(.)%>%as.data.frame()%>%ggplot()+geom_histogram(aes(x=.), fill="skyblue3", color="black",binwidth=100)+xlab("Scaffold Length")+labs(title="Strongylocentrotus purpuratus")
#histogram of contig lengths, restricted to scaffolds < 10,000 bp
restricted.plot<-read.fasta(fasta)%>%getLength(.)%>%as.data.frame()%>%filter(.<10000)%>%ggplot()+geom_histogram(aes(x=.), fill="skyblue3", color="black",binwidth=100)+xlab("Scaffold Length")+labs(title="Strongylocentrotus purpuratus")
fasta="~/Desktop/compgen/repo/ensembl/genome_fasta/Strongylocentrotus_purpuratus.Spur_3.1.dna.toplevel.fa"
fasta.len=read.fasta(fasta)%>%getLength()
print(paste("Median scaffold/contig length (bp):",median(as.numeric(fasta.len))))
print(paste("Max scaffold/contig length (bp):",max(as.numeric(fasta.len))))
print(paste("Minimum scaffold/contig length (bp):",min(as.numeric(fasta.len))))
fasta="~/Desktop/compgen/repo/ensembl/genome_fasta/Taeniopygia_guttata.taeGut3.2.4.dna.toplevel"
fasta.len=read.fasta(fasta)%>%getLength()
fasta="~/Desktop/compgen/repo/ensembl/genome_fasta/Taeniopygia_guttata.taeGut3.2.4.dna.toplevel.fa"
fasta.len=read.fasta(fasta)%>%getLength()
print(paste("Median scaffold/contig length (bp):",median(as.numeric(fasta.len))))
print(paste("Max scaffold/contig length (bp):",max(as.numeric(fasta.len))))
print(paste("Minimum scaffold/contig length (bp):",min(as.numeric(fasta.len))))
fasta="~/Desktop/compgen/repo/ensembl/genome_fasta/Trichoplax_adhaerens.ASM15027v1.dna.toplevel.fa"
fasta.len=read.fasta(fasta)%>%getLength()
print(paste("Median scaffold/contig length (bp):",median(as.numeric(fasta.len))))
print(paste("Max scaffold/contig length (bp):",max(as.numeric(fasta.len))))
print(paste("Minimum scaffold/contig length (bp):",min(as.numeric(fasta.len))))
#Please replace gff3_sample.gff3 with path to desired gff3 file. GFF3 files can be found in data/genomes/annot
#install.packages("ape")
gff3="data/genomes/gff3/Amphimedon_queenslandica.Aqu1.42.gff3"
#parse gff3 and create new df with only seqid, type, start and end. Keep start and end coords for later analyses.
contig.gene.df <- ape::read.gff(file=gff3, GFF3=TRUE) %>% select(.,"seqid","type","start","end") %>% filter(.,type == "gene")
#for histogram, take just the contig names and gene counts
gene.count<- as.data.frame(table(contig.gene.df$seqid))
#plot frequency of frequencies
ggplot(data = gene.count, aes(x=gene.count$Freq)) + geom_histogram(binwidth=1) + geom_vline(xintercept = 3)
#stats
print(paste("proportion contigs with gene count >= 3:",nrow(subset(gene.count, gene.count$Freq >= 3))/nrow(gene.count)*100))
print(paste("Median no. genes/contig:",median(gene.count$Freq)))
print(paste("Max no. genes/contig:",max(gene.count$Freq)))
#Please replace gff3_sample.gff3 with path to desired gff3 file. GFF3 files can be found in data/genomes/annot
#install.packages("ape")
gff3="data/genomes/gff3/Amphimedon_queenslandica.Aqu1.42.gff3"
#parse gff3 and create new df with only seqid, type, start and end. Keep start and end coords for later analyses.
contig.gene.df <- ape::read.gff(file=gff3, GFF3=TRUE) %>% select(.,"seqid","type","start","end") %>% filter(.,type == "gene")
#for histogram, take just the contig names and gene counts
gene.count<- as.data.frame(table(contig.gene.df$seqid))
#plot frequency of frequencies
gff3.plot<-ggplot(data = gene.count, aes(x=gene.count$Freq)) + geom_histogram(binwidth=1) + geom_vline(xintercept = 3)
#stats
print(paste("proportion contigs with gene count >= 3:",nrow(subset(gene.count, gene.count$Freq >= 3))/nrow(gene.count)*100))
print(paste("Median no. genes/contig:",median(gene.count$Freq)))
print(paste("Max no. genes/contig:",max(gene.count$Freq)))
gff3.plot
#Please replace gff3_sample.gff3 with path to desired gff3 file. GFF3 files can be found in data/genomes/annot
#install.packages("ape")
gff3="data/genomes/gff3/Capitella_teleta.Capitella_teleta_v1.0.42.gff3"
#parse gff3 and create new df with only seqid, type, start and end. Keep start and end coords for later analyses.
contig.gene.df <- ape::read.gff(file=gff3, GFF3=TRUE) %>% select(.,"seqid","type","start","end") %>% filter(.,type == "gene")
#for histogram, take just the contig names and gene counts
gene.count<- as.data.frame(table(contig.gene.df$seqid))
#plot frequency of frequencies
gff3.plot<-ggplot(data = gene.count, aes(x=gene.count$Freq)) + geom_histogram(binwidth=1) + geom_vline(xintercept = 3)
#stats
print(paste("proportion contigs with gene count >= 3:",nrow(subset(gene.count, gene.count$Freq >= 3))/nrow(gene.count)*100))
print(paste("Median no. genes/contig:",median(gene.count$Freq)))
print(paste("Max no. genes/contig:",max(gene.count$Freq)))
#Please replace gff3_sample.gff3 with path to desired gff3 file. GFF3 files can be found in data/genomes/annot
#install.packages("ape")
gff3="data/genomes/gff3/Danio_rerio.GRCz11.95.gff3"
#parse gff3 and create new df with only seqid, type, start and end. Keep start and end coords for later analyses.
contig.gene.df <- ape::read.gff(file=gff3, GFF3=TRUE) %>% select(.,"seqid","type","start","end") %>% filter(.,type == "gene")
#for histogram, take just the contig names and gene counts
gene.count<- as.data.frame(table(contig.gene.df$seqid))
#plot frequency of frequencies
gff3.plot<-ggplot(data = gene.count, aes(x=gene.count$Freq)) + geom_histogram(binwidth=1) + geom_vline(xintercept = 3)
#stats
print(paste("proportion contigs with gene count >= 3:",nrow(subset(gene.count, gene.count$Freq >= 3))/nrow(gene.count)*100))
print(paste("Median no. genes/contig:",median(gene.count$Freq)))
print(paste("Max no. genes/contig:",max(gene.count$Freq)))
contig.gene.df
View(gene.count)
#Please replace gff3_sample.gff3 with path to desired gff3 file. GFF3 files can be found in data/genomes/annot
#install.packages("ape")
gff3="data/genomes/gff3/Danio_rerio.GRCz11.96.chr"
#parse gff3 and create new df with only seqid, type, start and end. Keep start and end coords for later analyses.
contig.gene.df <- ape::read.gff(file=gff3, GFF3=TRUE) %>% select(.,"seqid","type","start","end") %>% filter(.,type == "gene")
#Please replace gff3_sample.gff3 with path to desired gff3 file. GFF3 files can be found in data/genomes/annot
#install.packages("ape")
gff3="data/genomes/gff3/Danio_rerio.GRCz11.96.chr.gff3"
#parse gff3 and create new df with only seqid, type, start and end. Keep start and end coords for later analyses.
contig.gene.df <- ape::read.gff(file=gff3, GFF3=TRUE) %>% select(.,"seqid","type","start","end") %>% filter(.,type == "gene")
#for histogram, take just the contig names and gene counts
gene.count<- as.data.frame(table(contig.gene.df$seqid))
#plot frequency of frequencies
gff3.plot<-ggplot(data = gene.count, aes(x=gene.count$Freq)) + geom_histogram(binwidth=1) + geom_vline(xintercept = 3)
#stats
print(paste("proportion contigs with gene count >= 3:",nrow(subset(gene.count, gene.count$Freq >= 3))/nrow(gene.count)*100))
print(paste("Median no. genes/contig:",median(gene.count$Freq)))
print(paste("Max no. genes/contig:",max(gene.count$Freq)))
View(gene.count)
gff3.plot
#Please replace gff3_sample.gff3 with path to desired gff3 file. GFF3 files can be found in data/genomes/annot
#install.packages("ape")
gff3="data/genomes/gff3/Capitella_teleta.Capitella_teleta_v1.0.42.gff3"
#parse gff3 and create new df with only seqid, type, start and end. Keep start and end coords for later analyses.
contig.gene.df <- ape::read.gff(file=gff3, GFF3=TRUE) %>% select(.,"seqid","type","start","end") %>% filter(.,type == "gene")
#for histogram, take just the contig names and gene counts
gene.count<- as.data.frame(table(contig.gene.df$seqid))
#plot frequency of frequencies
gff3.plot<-ggplot(data = gene.count, aes(x=gene.count$Freq)) + geom_histogram(binwidth=1) + geom_vline(xintercept = 3)
#stats
print(paste("proportion contigs with gene count >= 3:",nrow(subset(gene.count, gene.count$Freq >= 3))/nrow(gene.count)*100))
print(paste("Median no. genes/contig:",median(gene.count$Freq)))
print(paste("Max no. genes/contig:",max(gene.count$Freq)))
gff3.plot
#Please replace gff3_sample.gff3 with path to desired gff3 file. GFF3 files can be found in data/genomes/annot
#install.packages("ape")
gff3="data/genomes/gff3/Drosophila_melanogaster.BDGP6.22.96.chr3"
#parse gff3 and create new df with only seqid, type, start and end. Keep start and end coords for later analyses.
contig.gene.df <- ape::read.gff(file=gff3, GFF3=TRUE) %>% select(.,"seqid","type","start","end") %>% filter(.,type == "gene")
#Please replace gff3_sample.gff3 with path to desired gff3 file. GFF3 files can be found in data/genomes/annot
#install.packages("ape")
gff3="data/genomes/gff3/Drosophila_melanogaster.BDGP6.22.96.chr3.gff3"
#parse gff3 and create new df with only seqid, type, start and end. Keep start and end coords for later analyses.
contig.gene.df <- ape::read.gff(file=gff3, GFF3=TRUE) %>% select(.,"seqid","type","start","end") %>% filter(.,type == "gene")
#Please replace gff3_sample.gff3 with path to desired gff3 file. GFF3 files can be found in data/genomes/annot
#install.packages("ape")
gff3="data/genomes/gff3/Drosophila_melanogaster.BDGP6.22.96.chr3.gff3"
#parse gff3 and create new df with only seqid, type, start and end. Keep start and end coords for later analyses.
contig.gene.df <- ape::read.gff(file=gff3, GFF3=TRUE) %>% select(.,"seqid","type","start","end") %>% filter(.,type == "gene")
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
echo=FALSE,
dpi=300,
cache=TRUE
)
library( tidyverse )
library(ggplot2)
library(seqinr)
library(ape)
library(Biostrings)
library(dplyr)
#clustering
library(cluster)
library(CrossClustering)
library(vegan)
library(Rtsne)
###CHANGE AGALMA CSV HERE
#set up empty df to rbind to
all.df<-data.frame(matrix(ncol=5,nrow=0))
names<-c("seqid","type","start","end","attributes")
colnames(all.df)<-names
#set up file names to loop through
gff3_dir="data/genomes/gff3/"
gff3=c("Amphimedon_queenslandica.Aqu1.42.gff3","Capitella_teleta.Capitella_teleta_v1.0.42.gff3","Danio_rerio.GRCz11.95.gff3","Drosophila_melanogaster.BDGP6.95.gff3","Helobdella_robusta.Helro1.42.gff3","Homo_sapiens.GRCh38.95.gff3","Lottia_gigantea.Lotgi1.42.gff3","Mnemiopsis_leidyi.MneLei_Aug2011.42.gff3","Nematostella_vectensis.ASM20922v1.42.gff3","Strongylocentrotus_purpuratus.Spur_3.1.42.gff3","Taeniopygia_guttata.taeGut3.2.4.95.gff3","Trichoplax_adhaerens.ASM15027v1.42.gff3")
for (blah in gff3)
{
gff3_path<-paste0(gff3_dir,blah)
contig.gene.df <- ape::read.gff(file=gff3_path, GFF3=TRUE) %>% dplyr::select(.,"seqid","type","start","end","attributes") %>% filter(.,type == "gene")
all.df<-bind_rows(all.df,contig.gene.df)
}
#Parse out the gene_id from the attributes
all.df$gene<-gsub(".*gene_id=(.*?);.*","\\1",all.df$attributes)
#Begin contstruction of MASTAAA! table.
master.table<-select(all.df,"seqid","start","end","gene")
#need to add animal ids
master.table$animal<-c(rep.int("Amphimedon_queenslandica",43615),rep.int("Capitella_telata",32175),rep.int("Danio_rerio",25606),rep.int("Drosophila_melanogaster",13931),rep.int("Helobdella_robusta",23432),rep.int("Homo_sapiens",21492),rep.int("Lottia_gigantea",23349),rep.int("Mnemiopsis_leidyi",16559),rep.int("Nematostella_vectensis",24773),rep.int("Strongylocentrotus_purpuratus",28987),rep.int("Taeniopygia_guttata",17488),rep.int("Trichoplax_adhaerens",11520))
write.csv(master.table,"master.table.csv",quote=FALSE,row.names=FALSE)
#Read in agalma homologs csv
agalma.homologs<-read.csv("5taxa_results_alt.csv",header=TRUE,sep=",")
#left join because need to know which genes have no homology too.
final.master.table<-left_join(master.table,agalma.homologs)%>%select(.,"seqid","start","end","gene","homology_id","catalog_id","animal")
write.csv(final.master.table,"final.master.table_absentgenes.csv",quote=FALSE,row.names=FALSE)
#to double check that there are no duplicate genes in final.master.table:
#duplicated(final.master.table$gene)%>%table()
#must run previous chunk first
#save master table before continuing
save.master.table<-master.table
#Take a subset! Otherwise following code will not complete running and freeze everything!!!
filter_target=c("Homo_sapiens","Danio_rerio","Strongylocentrotus_purpuratus")
master.table<-filter(master.table, animal==filter_target)
#There are human gene names in pep files that are not anywhere in gff3 files = inner_join
#Scaffold names may not be unique but must be - join seqid and catalog id
final.master.table_cluster<-inner_join(master.table,agalma.homologs)%>%dplyr::select(.,seqid,start,end,gene,homology_id,catalog_id,animal)%>%mutate(species_scaffold=str_c(seqid,animal,sep="_"))%>%dplyr::select(.,species_scaffold,homology_id,gene)
#make contingency table
contingency<-table(final.master.table_cluster$species_scaffold,final.master.table_cluster$homology_id)%>%as.matrix()
contingency<-1*(contingency>0)
contingency<-contingency[sample(100),sample(100)]
#dissimilarity matrix
dist.matrix<-daisy(contingency,metric="gower",stand=FALSE)
#sparse data troubleshooting
#cluster
#agglomerative
#ag<-agnes(dist.matrix,diss=TRUE)
#plot(ag,labels=FALSE)
#divisive
#di<-diana(dist.matrix)
#plot(di,labels=FALSE)
#kmeans
#kmean<-kmeans(dist.matrix,51)
#kclust<-kmean$cluster
#tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=1)
#tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(kclust))
#tsn_plot_k<-ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
#tsn_plot_k
cross.clust<-cc_crossclustering(dist.matrix,out=FALSE)
View(final.master.table)
clust<-cc_get_cluster(cross.clust)
#plot the clustering
#see code from http://dpmartin42.github.io/posts/r/cluster-mixed-types
#adjust perplexity if get error "perplexity is too large for the number of samples"
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=30)
tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(clust))
tsn_plot<-ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
tsn_plot
#put together the scaffold:cluster dataframe
clust.df<-as.data.frame(clust)
colnames(clust.df)<-"cluster_id"
clust.df<-mutate(clust.df,species_scaffold=row.names(contingency))
cluster.master.table<-final.master.table%>%mutate(species_scaffold=str_c(seqid,animal,sep="_"))%>%left_join(.,clust.df,by="species_scaffold")%>%select(.,species_scaffold,start,end,gene,homology_id,animal,cluster_id)
#Add an index to each species
cluster.master.table<-cluster.master.table%>%mutate(species_index=case_when(animal=="Amphimedon_queenslandica"~1,animal=="Mnemiopsis_leidyi"~1,animal=="Trichoplax_adhaerens"~2,animal=="Nematostella_vectensis"~3,animal=="Capitella_telata"~4,animal=="Helobdella_robusta"~4,animal=="Lottia_gigantea"~4,animal=="Drosophila_melanogaster"~4,animal=="Strongylocentrotus_purpuratus"~4,animal=="Danio_rerio"~4,animal=="Taeniopygia_guttata"~5,animal=="Homo_sapiens"~6))
write.csv(cluster.master.table,"cluster.master.table.csv",quote=FALSE,row.names=FALSE)
nrow(contingency)
tsn_plot
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=30)
tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(clust))
tsn_plot<-ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
tsn_plot
tsn_plot
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=1)
tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(clust))
tsn_plot<-ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
tsn_plot
tsn_plot
View(tsn_plot)
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=1)
tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(clust))
ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=10)
tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(clust))
tsne_plot<-ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
tsne_plot
View(contingency)
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
echo=FALSE,
dpi=300,
cache=TRUE
)
library( tidyverse )
library(ggplot2)
library(seqinr)
library(ape)
library(Biostrings)
library(dplyr)
#clustering
library(cluster)
library(CrossClustering)
library(vegan)
library(Rtsne)
###CHANGE AGALMA CSV HERE
#set up empty df to rbind to
all.df<-data.frame(matrix(ncol=5,nrow=0))
names<-c("seqid","type","start","end","attributes")
colnames(all.df)<-names
#set up file names to loop through
gff3_dir="data/genomes/gff3/"
gff3=c("Amphimedon_queenslandica.Aqu1.42.gff3","Capitella_teleta.Capitella_teleta_v1.0.42.gff3","Danio_rerio.GRCz11.95.gff3","Drosophila_melanogaster.BDGP6.95.gff3","Helobdella_robusta.Helro1.42.gff3","Homo_sapiens.GRCh38.95.gff3","Lottia_gigantea.Lotgi1.42.gff3","Mnemiopsis_leidyi.MneLei_Aug2011.42.gff3","Nematostella_vectensis.ASM20922v1.42.gff3","Strongylocentrotus_purpuratus.Spur_3.1.42.gff3","Taeniopygia_guttata.taeGut3.2.4.95.gff3","Trichoplax_adhaerens.ASM15027v1.42.gff3")
for (blah in gff3)
{
gff3_path<-paste0(gff3_dir,blah)
contig.gene.df <- ape::read.gff(file=gff3_path, GFF3=TRUE) %>% dplyr::select(.,"seqid","type","start","end","attributes") %>% filter(.,type == "gene")
all.df<-bind_rows(all.df,contig.gene.df)
}
#must run previous chunk first
#save master table before continuing
save.master.table<-master.table
###CHANGE AGALMA CSV HERE
#set up empty df to rbind to
all.df<-data.frame(matrix(ncol=5,nrow=0))
names<-c("seqid","type","start","end","attributes")
colnames(all.df)<-names
#set up file names to loop through
gff3_dir="data/genomes/gff3/"
gff3=c("Amphimedon_queenslandica.Aqu1.42.gff3","Capitella_teleta.Capitella_teleta_v1.0.42.gff3","Danio_rerio.GRCz11.95.gff3","Drosophila_melanogaster.BDGP6.95.gff3","Helobdella_robusta.Helro1.42.gff3","Homo_sapiens.GRCh38.95.gff3","Lottia_gigantea.Lotgi1.42.gff3","Mnemiopsis_leidyi.MneLei_Aug2011.42.gff3","Nematostella_vectensis.ASM20922v1.42.gff3","Strongylocentrotus_purpuratus.Spur_3.1.42.gff3","Taeniopygia_guttata.taeGut3.2.4.95.gff3","Trichoplax_adhaerens.ASM15027v1.42.gff3")
for (blah in gff3)
{
gff3_path<-paste0(gff3_dir,blah)
contig.gene.df <- ape::read.gff(file=gff3_path, GFF3=TRUE) %>% dplyr::select(.,"seqid","type","start","end","attributes") %>% filter(.,type == "gene")
all.df<-bind_rows(all.df,contig.gene.df)
}
#Parse out the gene_id from the attributes
all.df$gene<-gsub(".*gene_id=(.*?);.*","\\1",all.df$attributes)
#Begin contstruction of MASTAAA! table.
master.table<-select(all.df,"seqid","start","end","gene")
#need to add animal ids
master.table$animal<-c(rep.int("Amphimedon_queenslandica",43615),rep.int("Capitella_telata",32175),rep.int("Danio_rerio",25606),rep.int("Drosophila_melanogaster",13931),rep.int("Helobdella_robusta",23432),rep.int("Homo_sapiens",21492),rep.int("Lottia_gigantea",23349),rep.int("Mnemiopsis_leidyi",16559),rep.int("Nematostella_vectensis",24773),rep.int("Strongylocentrotus_purpuratus",28987),rep.int("Taeniopygia_guttata",17488),rep.int("Trichoplax_adhaerens",11520))
write.csv(master.table,"master.table.csv",quote=FALSE,row.names=FALSE)
#Read in agalma homologs csv
agalma.homologs<-read.csv("5taxa_results_alt.csv",header=TRUE,sep=",")
#left join because need to know which genes have no homology too.
final.master.table<-left_join(master.table,agalma.homologs)%>%select(.,"seqid","start","end","gene","homology_id","catalog_id","animal")
write.csv(final.master.table,"final.master.table_absentgenes.csv",quote=FALSE,row.names=FALSE)
#to double check that there are no duplicate genes in final.master.table:
#duplicated(final.master.table$gene)%>%table()
###CHANGE AGALMA CSV HERE
#set up empty df to rbind to
all.df<-data.frame(matrix(ncol=5,nrow=0))
names<-c("seqid","type","start","end","attributes")
colnames(all.df)<-names
#set up file names to loop through
gff3_dir="data/genomes/gff3/"
gff3=c("Amphimedon_queenslandica.Aqu1.42.gff3","Capitella_teleta.Capitella_teleta_v1.0.42.gff3","Danio_rerio.GRCz11.95.gff3","Drosophila_melanogaster.BDGP6.95.gff3","Helobdella_robusta.Helro1.42.gff3","Homo_sapiens.GRCh38.95.gff3","Lottia_gigantea.Lotgi1.42.gff3","Mnemiopsis_leidyi.MneLei_Aug2011.42.gff3","Nematostella_vectensis.ASM20922v1.42.gff3","Strongylocentrotus_purpuratus.Spur_3.1.42.gff3","Taeniopygia_guttata.taeGut3.2.4.95.gff3","Trichoplax_adhaerens.ASM15027v1.42.gff3")
for (blah in gff3)
{
gff3_path<-paste0(gff3_dir,blah)
contig.gene.df <- ape::read.gff(file=gff3_path, GFF3=TRUE) %>% dplyr::select(.,"seqid","type","start","end","attributes") %>% filter(.,type == "gene")
all.df<-bind_rows(all.df,contig.gene.df)
}
#Parse out the gene_id from the attributes
all.df$gene<-gsub(".*gene_id=(.*?);.*","\\1",all.df$attributes)
#Begin contstruction of MASTAAA! table.
master.table<-select(all.df,"seqid","start","end","gene")
#need to add animal ids
master.table$animal<-c(rep.int("Amphimedon_queenslandica",43615),rep.int("Capitella_telata",32175),rep.int("Danio_rerio",25606),rep.int("Drosophila_melanogaster",13931),rep.int("Helobdella_robusta",23432),rep.int("Homo_sapiens",21492),rep.int("Lottia_gigantea",23349),rep.int("Mnemiopsis_leidyi",16559),rep.int("Nematostella_vectensis",24773),rep.int("Strongylocentrotus_purpuratus",28987),rep.int("Taeniopygia_guttata",17488),rep.int("Trichoplax_adhaerens",11520))
write.csv(master.table,"master.table.csv",quote=FALSE,row.names=FALSE)
#Read in agalma homologs csv
agalma.homologs<-read.csv("5taxa_results_alt.csv",header=TRUE,sep=",")
#left join because need to know which genes have no homology too.
final.master.table<-left_join(master.table,agalma.homologs)%>%select(.,"seqid","start","end","gene","homology_id","catalog_id","animal")
write.csv(final.master.table,"final.master.table_absentgenes.csv",quote=FALSE,row.names=FALSE)
#to double check that there are no duplicate genes in final.master.table:
#duplicated(final.master.table$gene)%>%table()
#must run previous chunk first
#save master table before continuing
save.master.table<-master.table
#***SUBSAMPLE
#Take a subset! Otherwise following code will not complete running and freeze everything!!!
filter_target=c("Homo_sapiens","Danio_rerio","Strongylocentrotus_purpuratus")
master.table<-filter(master.table, animal==filter_target)
#There are human gene names in pep files that are not anywhere in gff3 files = inner_join
#Scaffold names may not be unique but must be - join seqid and catalog id
final.master.table_cluster<-inner_join(master.table,agalma.homologs)%>%dplyr::select(.,seqid,start,end,gene,homology_id,catalog_id,animal)%>%mutate(species_scaffold=str_c(seqid,animal,sep="_"))%>%dplyr::select(.,species_scaffold,homology_id,gene)
#make contingency table
contingency<-table(final.master.table_cluster$species_scaffold,final.master.table_cluster$homology_id)%>%as.matrix()
contingency<-1*(contingency>0)
#***SUBSAMPLE
contingency<-contingency[sample(100),sample(100)]
#dissimilarity matrix
dist.matrix<-daisy(contingency,metric="gower",stand=FALSE)
#sparse data troubleshooting
#cluster
#agglomerative
#ag<-agnes(dist.matrix,diss=TRUE)
#plot(ag,labels=FALSE)
#divisive
#di<-diana(dist.matrix)
#plot(di,labels=FALSE)
#kmeans
#kmean<-kmeans(dist.matrix,51)
#kclust<-kmean$cluster
#tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=1)
#tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(kclust))
#tsn_plot_k<-ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
#tsn_plot_k
cross.clust<-cc_crossclustering(dist.matrix,out=FALSE)
clust<-cc_get_cluster(cross.clust)
#plot the clustering
#see code from http://dpmartin42.github.io/posts/r/cluster-mixed-types
#adjust perplexity if get error "perplexity is too large for the number of samples"
tsne_obj<-Rtsne(dist.matrix,is_distance=TRUE,perplexity=10)
tsne_data<-tsne_obj$Y%>%data.frame()%>%setNames(c("X","Y"))%>%mutate(cluster=factor(clust))
tsne_plot<-ggplot(aes(x = X, y = Y), data = tsne_data) + geom_point(aes(color = cluster))
tsne_plot
#put together the scaffold:cluster dataframe
clust.df<-as.data.frame(clust)
colnames(clust.df)<-"cluster_id"
clust.df<-mutate(clust.df,species_scaffold=row.names(contingency))
cluster.master.table<-final.master.table%>%mutate(species_scaffold=str_c(seqid,animal,sep="_"))%>%left_join(.,clust.df,by="species_scaffold")%>%select(.,species_scaffold,start,end,gene,homology_id,animal,cluster_id)
#Add an index to each species
cluster.master.table<-cluster.master.table%>%mutate(species_index=case_when(animal=="Amphimedon_queenslandica"~1,animal=="Mnemiopsis_leidyi"~1,animal=="Trichoplax_adhaerens"~2,animal=="Nematostella_vectensis"~3,animal=="Capitella_telata"~4,animal=="Helobdella_robusta"~4,animal=="Lottia_gigantea"~4,animal=="Drosophila_melanogaster"~4,animal=="Strongylocentrotus_purpuratus"~4,animal=="Danio_rerio"~4,animal=="Taeniopygia_guttata"~5,animal=="Homo_sapiens"~6))
write.csv(cluster.master.table,"cluster.master.table.csv",quote=FALSE,row.names=FALSE)
View(contingency)
setwd("~/repo/finalproject/")
csv<-read.csv(genome_data.csv)
csv<-read.csv("genome_data.csv")
View(csv)
csv<-read.csv("genome_data.csv")
df<-data.frame(y=csv$median_scaff_len)
df<-mutate(df,x=c(1,2,3,4,5,6,7,8,9,10,11,12))
library(dplyr)
library(ggplot)
library(ggplot2)
df<-mutate(df,x=c(1,2,3,4,5,6,7,8,9,10,11,12))
ggplot(df, aes(x,y))+geom_col()
plot(csv$median_scaff_len)
ggplot(df, aes(x,y))+geom_bar(stat="count")
ggplot(df, aes(y))+geom_bar(stat="count")
csv$median_scaff_len
View(df)
ggplot(df,aes(x=x,y=y))+geom_col()
ggplot(df,aes(x=x,y=y))+geom_col()+scale_y_log_10()
ggplot(df,aes(x=x,y=y))+geom_col()+scale_y_continuous(trans='log10')
ggplot(df,aes(x=x,y=y,fill="skyblue"))+geom_col()+scale_y_continuous(trans='log10')
ggplot(df,aes(x=x,y=y,fill="red"))+geom_col()+scale_y_continuous(trans='log10')
ggplot(df,aes(x=x,y=y,fill=skyblue))+geom_col()+scale_y_continuous(trans='log10')
ggplot(df,aes(x=x,y=y))+geom_col()+scale_y_continuous(trans='log10')
ggplot(df,aes(x=x,y=y))+geom_col(fill="skyblue3")+scale_y_continuous(trans='log10')
csv<-read.csv("genome_data.csv")
ggplot(df,aes(x=x,y=y))+geom_col(fill="skyblue3")+scale_y_continuous(trans='log10')
View(df)
View(csv)
df<-data.frame(y=csv$median_scaff_len)
df<-mutate(df,x=c(1,2,3,4,5,6,7,8,9,10,11,12))
ggplot(df,aes(x=x,y=y))+geom_col(fill="skyblue3")+scale_y_continuous(trans='log10')
csv<-read.csv("genome_data.csv")
df<-data.frame(y=csv$median_scaff_len)
df<-mutate(df,x=c(1,2,3,4,5,6,7,8,9,10,11,12))
ggplot(df,aes(x=x,y=y))+geom_col(fill="skyblue3")+scale_y_continuous(trans='log10')
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
echo=FALSE,
dpi=300,
cache=TRUE
)
library( tidyverse )
library(ggplot2)
library(seqinr)
library(ape)
library(Biostrings)
library(dplyr)
#clustering
library(cluster)
library(CrossClustering)
library(vegan)
library(Rtsne)
fasta="~/repo/finalproject/Drosophia_chr.fa"
fasta.len=read.fasta(fasta)%>%getLength()
print(paste("Median scaffold/contig length (bp):",median(as.numeric(fasta.len))))
print(paste("Max scaffold/contig length (bp):",max(as.numeric(fasta.len))))
print(paste("Minimum scaffold/contig length (bp):",min(as.numeric(fasta.len))))
csv<-read.csv("genome_data.csv")
df<-data.frame(y=csv$median_scaff_len)
df<-mutate(df,x=c(1,2,3,4,5,6,7,8,9,10,11,12))
ggplot(df,aes(x=x,y=y))+geom_col(fill="skyblue3")+scale_y_continuous(trans='log10')
scatterplot(csv$median_scaff_len,csv$no.chromosomes)
plot(csv$median_scaff_len,csv$no.chromosomes)
plot(csv$no.chromosomes,csv$median_scaff_len)
df<-data.frame(y=csv$no.chromosomes)
ggplot(df,aes(x=x,y=y))+geom_col(fill="skyblue3")+scale_y_continuous(trans='log10')
df<-mutate(df,x=c(1,2,3,4,5,6,7,8,9,10,11,12))
Veiw(df)
View(df)
ggplot(df,aes(x=x,y=y))+geom_col(fill="skyblue3")+scale_y_continuous(trans='log10')
df<-data.frame(y=csv$prop.contigs.morethan3)
ggplot(df,aes(x=x,y=y))+geom_col(fill="green")+scale_y_continuous(trans='log10')
View(df)
df<-mutate(df,x=c(1,2,3,4,5,6,7,8,9,10,11,12))
ggplot(df,aes(x=x,y=y))+geom_col(fill="green")+scale_y_continuous(trans='log10')
ggplot(df,aes(x=x,y=y))+geom_col(fill="darkseagreen")+scale_y_continuous(trans='log10')
ggplot(df,aes(x=x,y=y))+geom_col(fill="darkseagreen4")+scale_y_continuous(trans='log10')
ggplot(df,aes(x=x,y=y))+geom_col(fill="darkseagreen")+scale_y_continuous(trans='log10')
df<-mutate(df,x=c(1,2,3,4,5,6,7,8,9,10,11,12))
df<-data.frame(y=csv$no.contigs.more.than.three)
ggplot(df,aes(x=x,y=y))+geom_col(fill="darkseagreen")+scale_y_continuous(trans='log10')
df<-mutate(df,x=c(1,2,3,4,5,6,7,8,9,10,11,12))
ggplot(df,aes(x=x,y=y))+geom_col(fill="darkseagreen")+scale_y_continuous(trans='log10')
df<-data.frame(y=csv$median_scaff_len)
df<-data.frame(z=csv$no.chromosomes)
df<-mutate(df,x=c(1,2,3,4,5,6,7,8,9,10,11,12))
View(df)
df<-data.frame(y=csv$median_scaff_len)
df<-mutate(df,z=csv$no.chromosomes)
df<-mutate(df,x=c(1,2,3,4,5,6,7,8,9,10,11,12))
View(df)
ggplot(df,aes(x=z,y=x))+geom_point()
df<-data.frame(y=csv$median_scaff_len)
df<-mutate(df,z=csv$no.chromosomes)
ggplot(df,aes(x=z,y=x))+geom_point()+scale_y_continuous(trans='log10')
ggplot(df,aes(x=z,y=y))+geom_point()+scale_y_continuous(trans='log10')
ggplot(df,aes(x=y,y=z))+geom_point()+scale_y_continuous(trans='log10')
ch<-csv$no.chromosomes
sl<-csv$median_scaff_len
df<-data.frame(ch,sl)
View(df)
ggplot(df,aes=(x=chr,y=sl))+geom_point()
ggplot(df,aes=(x=ch,y=sl))+geom_point()
View(Df)
View(df)
ggplot(df,aes(x=ch,y=sl))+geom_point()+scale_y_continuous(trans='log10')
ggplot(df,aes(x=ch,y=sl))+geom_point()
ggplot(df,aes(x=ch,y=sl))+geom_point()+scale_y_continuous(trans='log2')
ggplot(df,aes(x=ch,y=sl))+geom_point()+scale_y_continuous(trans='log10')
df.nohi<-read.csv("genome_stats_nohi.csv")
View(df.nohi)
ggplot(df,aes(x=df.nohi$no.chromosomes,y=df.nohi$median.genes.per.contig))+geom_point()
View(df.nohi)
df.nohi$median.genes.per.contig
ggplot(df.nohi,aes(x=df.nohi$no.chromosomes,y=df.nohi$median.genes.per.contig))+geom_point()
ggplot(df.nohi,aes(x=df.nohi$no.chromosomes,y=df.nohi$median_scaff_len))+geom_point()
ggplot(df.nohi,aes(x=df.nohi$no.chromosomes,y=df.nohi$median_scaff_len))+geom_point()+geom_smooth(method="lm")
ggplot(df.nohi,aes(x=df.nohi$no.chromosomes,y=df.nohi$median_scaff_len))+geom_point()+geom_smooth(method=lm)
ggplot(df.nohi,aes(x=df.nohi$no.chromosomes,y=df.nohi$median.genes.per.contig))+geom_point()
ggplot(df.nohi,aes(x=df.nohi$no.chromosomes,y=df.nohi$median.genes.per.contig))+geom_point()
ggplot(df.nohi,aes(x=df.nohi$no.chromosomes,y=df.nohi$median.genes.per.contig))+geom_point()+scale_y_continuous(trans='log10')
ggplot(df.nohi,aes(x=df.nohi$no.chromosomes,y=df.nohi$contigs.more.than.three))+geom_point()+scale_y_continuous(trans='log10')
ggplot(df.nohi,aes(x=df.nohi$no.chromosomes,y=df.nohi$no.contigs.more.than.three))+geom_point()+scale_y_continuous(trans='log10')
ggplot(df.nohi,aes(x=df.nohi$no.chromosomes,y=df.nohi$no.contigs.more.than.three))+geom_point()+scale_y_continuous(trans='log10')+geom_smooth(method="lm")
ggplot(df.nohi,aes(x=df.nohi$no.chromosomes,y=df.nohi$no.contigs.more.than.three))+geom_point()+scale_y_continuous(trans='log10')+geom_smooth(method="lm",se=F)
ggplot(df.nohi,aes(x=df.nohi$median_scaff_len,y=df.nohi$no.contigs.more.than.three))+geom_point()+scale_y_continuous(trans='log10')+geom_smooth(method="lm",se=F)
ggplot(df.nohi,aes(x=df.nohi$median_scaff_len,y=df.nohi$no.contigs.more.than.three))+geom_point()+geom_smooth(method="lm",se=F)
