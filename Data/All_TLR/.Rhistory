list.files(MODIS_path)
MODIS_path <- "/Users/diegoellis/Dropbox/Marius_Galapagos/Inputs/RS_Data_Santa_Cruz/"
animals = NULL
night_only = TRUE
# The aim of this function is to visualize one month of data from MODIS LST, Ibuttons and biologging data
# Plot yearly temperature gradient of Ibutton
# Inputs:
# tortoise_df:Data frame biologging data  ibutton_df: Data frame of ibutton data  path_to_MODIS: Path to MODIS LST images
# month: Month to select data from  year: Yrar to select data from. night_only: Want either night time only or all data
# Animals: Select certain tagged animals or all of them
# plot_monthly_datasources <- function(tortoise_df, ibutton_df, path_to_MODIS, month, year, night_only = TRUE,  animals = NULL){
year = 2016
month = 8
require(rgdal);require(raster);require(plyr);require(lubridate);require(dplyr);require(ggplot2);require(tidyverse);require(viridis)
# Load tortoise data
if(night_only == TRUE){
load('/Users/diegoellis/projects/Manuscripts/2018/Biologging_tortuga/Data/Tortoise_nighttime.Rdata') # Aqua_tmp
if(!is.null(animals)){
tortoise_df <- Aqua_tmp %>% dplyr::filter(individual_id %in% animals)
rm(Aqua_tmp)
}
}else{
load('/Users/diegoellis/projects/Manuscripts/2018/Biologging_tortuga/Data/Tortoise_data/Sta_Cruz_all_data.Rdata')
la_reserva$individual_id <- droplevels(la_reserva$individual_id)
la_reserva <- la_reserva[la_reserva$individual_id != '',]
la_reserva$mes <- month(la_reserva$timestamp)
la_reserva <- la_reserva %>% rename(Jday = j_day, Long = long, Lat = lat, Year = YEAR)
tortoise_df <- la_reserva
rm(la_reserva)
}
animals = NULL
night_only = TRUE
year = 2016
month = 8
require(rgdal);require(raster);require(plyr);require(lubridate);require(dplyr);require(ggplot2);require(tidyverse);require(viridis)
# Load tortoise data
if(night_only == TRUE){
load('/Users/diegoellis/projects/Manuscripts/2018/Biologging_tortuga/Data/Tortoise_nighttime.Rdata') # Aqua_tmp
if(!is.null(animals)){
tortoise_df <- Aqua_tmp %>% dplyr::filter(individual_id %in% animals)
rm(Aqua_tmp)
}
}else{
load('/Users/diegoellis/projects/Manuscripts/2018/Biologging_tortuga/Data/Tortoise_data/Sta_Cruz_all_data.Rdata')
la_reserva$individual_id <- droplevels(la_reserva$individual_id)
la_reserva <- la_reserva[la_reserva$individual_id != '',]
la_reserva$mes <- month(la_reserva$timestamp)
la_reserva <- la_reserva %>% rename(Jday = j_day, Long = long, Lat = lat, Year = YEAR)
tortoise_df <- la_reserva
rm(la_reserva)
}
night_only == TRUE
!is.null(animals)
year = 2016
month = 8
night_only = TRUE
animals = NULL
# Load tortoise data
if(night_only == TRUE){
load('/Users/diegoellis/projects/Manuscripts/2018/Biologging_tortuga/Data/Tortoise_nighttime.Rdata') # Aqua_tmp
if(!is.null(animals)){
tortoise_df <- Aqua_tmp %>% dplyr::filter(individual_id %in% animals)
}else{
tortoise_df <- Aqua_tmp
}
rm(Aqua_tmp)
}else{
load('/Users/diegoellis/projects/Manuscripts/2018/Biologging_tortuga/Data/Tortoise_data/Sta_Cruz_all_data.Rdata')
la_reserva$individual_id <- droplevels(la_reserva$individual_id)
la_reserva <- la_reserva[la_reserva$individual_id != '',]
la_reserva$mes <- month(la_reserva$timestamp)
la_reserva <- la_reserva %>% rename(Jday = j_day, Long = long, Lat = lat, Year = YEAR)
tortoise_df <- la_reserva
rm(la_reserva)
}
# Load ibutton data
load('/Users/diegoellis/projects/Manuscripts/2018/Biologging_tortuga/Data/Ibutton/Santa_Cruz_ibutton.Rdata') # tmp_df
if(night_only == TRUE){
tmp_df <- tmp_df %>% subset(hora >= 0 & hora < 4)
}
# Load MODIS data
MODIS_path <- "/Users/diegoellis/Dropbox/Marius_Galapagos/Inputs/RS_Data_Santa_Cruz/"
if(night_only == TRUE){
MODIS_path <- "/Users/diegoellis/Dropbox/Marius_Galapagos/Inputs/RS_Data_Santa_Cruz/MODIS_LST_AQUA_DAY/"
}
head(tortoise_df)
load('/Users/diegoellis/projects/Manuscripts/2018/Biologging_tortuga/Data/Tortoise_data/Sta_Cruz_all_data.Rdata')
la_reserva$individual_id <- droplevels(la_reserva$individual_id)
la_reserva <- la_reserva[la_reserva$individual_id != '',]
la_reserva$mes <- month(la_reserva$timestamp)
la_reserva <- la_reserva %>% rename(Jday = j_day, Long = long, Lat = lat, Year = YEAR)
head(la_reserva)
la_reserva <- la_reserva %>% rename(Jday = j_day, Long = long, Lat = lat, Year = YEAR, month = mes)
load('/Users/diegoellis/projects/Manuscripts/2018/Biologging_tortuga/Data/Tortoise_data/Sta_Cruz_all_data.Rdata')
la_reserva$individual_id <- droplevels(la_reserva$individual_id)
la_reserva <- la_reserva[la_reserva$individual_id != '',]
la_reserva$mes <- month(la_reserva$timestamp)
la_reserva <- la_reserva %>% rename(Jday = j_day, Long = long, Lat = lat, Year = YEAR, month = mes)
head(la_reserva)
rm(la_reserva)
ibutton_df <- tmp_df
rn(tmp_df)
rm(tmp_df)
gc()
tortoise_df %>% dplyr::filter(Year == year & month == month)
nrow(tortoise_df %>% dplyr::filter(Year == year & month == month))
nrow(tortoise_df)
month
year
# Subset data by year and month
tortoise_df %>% dplyr::filter(Year == year,month == month)
tortoise_df %>% dplyr::filter(Year == year & month == month)
# Subset data by year and month
tortoise_df %>% dplyr::filter(month == month & Year == year)
month
month_time = 8
# Subset data by year and month
tortoise_df %>% dplyr::filter(month == month_time & Year == year)
tortoise_df %>% dplyr::filter(Year == year & month == month_time)
head(ibutton_df)
ibutton_df %>% rename(Year = year)
ibutton_df <- tmp_df %>% rename(Year = year)
# Load ibutton data
load('/Users/diegoellis/projects/Manuscripts/2018/Biologging_tortuga/Data/Ibutton/Santa_Cruz_ibutton.Rdata') # tmp_df
if(night_only == TRUE){
tmp_df <- tmp_df %>% subset(hora >= 0 & hora < 4)
}
ibutton_df <- tmp_df %>% rename(Year = year)
rm(tmp_df)
head(ibutton_df)
ibutton_df <- ibutton_df %>% dplyr::filter(Year == year & month == month_time)
ibutton_df
tortoise_df <- tortoise_df %>% dplyr::filter(Year == year & month == month_time)
ibutton_df <- ibutton_df %>% dplyr::filter(Year == year & month == month_time)
range(tortoise_df$Jday)
days_in_month(9)
days_in_month(month_time)
start_day <- 1
end_day <- days_in_month(month_time)
paste0(start_day, '/', month_time,'/', year)
as.POSIXct(paste0(start_day, '/', month_time,'/', year), format ='/d/m/yyyy')
as.POSIXct(paste0(start_day, '/', month_time,'/', year), format ='/d/m/y')
paste0(start_day, '/', month_time,'/', year)
dmy(paste0(start_day, '/', month_time,'/', year))
str(dmy(paste0(start_day, '/', month_time,'/', year)))
as.POSIXct(dmy(paste0(start_day, '/', month_time,'/', year)))
dmy(paste0(start_day, '/', month_time,'/', year))
start_day <- 1; end_day <- days_in_month(month_time)
end_date <- dmy(paste0(end_day, '/', month_time,'/', year))
end_date
jday(end_date)
yday(end_date)
jday_end <- yday(end_date)
jday_start <- yday(start_date); jday_end <- yday(end_date)
as.POSIXct(paste0(start_day, '/', month_time,'/', year), format ='/d/m/y')
MODIS_path <- paste0(MODIS_path, year)
MODIS_path
list.files(MODIS_path)
MODIS_path <- paste0(MODIS_path, year, '/')
MODIS_path
MODIS_path <- "/Users/diegoellis/Dropbox/Marius_Galapagos/Inputs/RS_Data_Santa_Cruz/MODIS_LST_AQUA_DAY/"
MODIS_path <- paste0(MODIS_path, year, '/')
MODIS_path
list.files(MODIS_path)
MODIS_path <- "/Users/diegoellis/Dropbox/Marius_Galapagos/Inputs/RS_Data_Santa_Cruz/MODIS_LST_AQUA_NIGHT/"
MODIS_path <- paste0(MODIS_path, year, '/')
list.files(MODIS_path)
MODIS_path
scp /home/fas/jetz/de293/project/Biosensor/RS_Data_all_Islands/MODIS_HDR_AQUA/2016_tif/night/*A2016361_res_compiled_msk_translated_WGS84.tif
list.files(MODIS_path)
MODIS_path
list.files(MODIS_path)
list.files(MODIS_path)
end_date
end_date
end_date_for_MODIS_grep = gsub('-','',end_date)
end_date_for_MODIS_grep
start_date_for_MODIS_grep = gsub('-','',start_date)
start_date <- dmy(paste0(start_day, '/', month_time,'/', year)); start_date_for_MODIS_grep = gsub('-','',start_date)
start_date_for_MODIS_grep
list.files(MODIS_path)
substr(list.files(MODIS_path), 10, 14)
substr(list.files(MODIS_path), 10, 13)
substr(list.files(MODIS_path), 10, 17)
substr(list.files(MODIS_path), 10, 16)
start_date_for_MODIS_grep = paste0(year,jday_start)
jday_start <- yday(start_date); jday_end <- yday(end_date)
jday_start
start_date_for_MODIS_grep = paste0(year,jday_start)
start_date_for_MODIS_grep
end_date_for_MODIS_grep = paste0(year,jday_end)
end_date_for_MODIS_grep
substr(list.files(MODIS_path), 10, 16) # Year Jday
MODIS_dates <- substr(list.files(MODIS_path), 10, 16) # Year Jday
end_date_for_MODIS_grep
which(MODIS_dates > start_date_for_MODIS_grep)
which(MODIS_dates > start_date_for_MODIS_grep & MODIS_dates < end_date_for_MODIS_grep)
MODIS_path[which(MODIS_dates > start_date_for_MODIS_grep & MODIS_dates < end_date_for_MODIS_grep),]
MODIS_path[which(MODIS_dates > start_date_for_MODIS_grep & MODIS_dates < end_date_for_MODIS_grep)]
which(MODIS_dates > start_date_for_MODIS_grep & MODIS_dates < end_date_for_MODIS_grep)
MODIS_path
list.files(MODIS_path)[which(MODIS_dates > start_date_for_MODIS_grep & MODIS_dates < end_date_for_MODIS_grep)]
MODIS_images <- list.files(MODIS_path)[which(MODIS_dates > start_date_for_MODIS_grep & MODIS_dates < end_date_for_MODIS_grep)]
?list.files
MODIS_images <- list.files(MODIS_path, full.names = TRUE)[which(MODIS_dates > start_date_for_MODIS_grep & MODIS_dates < end_date_for_MODIS_grep)]
MODIS_images
temp_sat <- stack(MODIS_images)
temp_sat
SRTM <- raster('/Users/diegoellis/Documents/LVM_share/Biosensor/Biosensor/Biosensor/Topographic_variables/SRTM_30m_Gal_res.tif') # Crop MODIS
SRTM <- raster('/Users/diegoellis/Documents/LVM_share/Biosensor/Biosensor/Biosensor/Topographic_variables/SRTM_30m_Gal_res.tif') # Crop MODIS to Santa Cruz Island
temp_sat = crop(temp_sat, SRTM2)
SRTM2
SRTM <- raster('/Users/diegoellis/Documents/LVM_share/Biosensor/Biosensor/Biosensor/Topographic_variables/SRTM_30m_Gal_res.tif') # Crop MODIS to Santa Cruz Island
temp_sat = crop(temp_sat, SRTM2)
SRTM2
SRTM2 = raster('/Users/diegoellis/Dropbox/Marius_Galapagos/Inputs/RS_Data_Santa_Cruz/SRTM/SRTM_Santa_Cruz.tif')
temp_sat = crop(temp_sat, SRTM2)
temp_sat <- disaggregate(temp_sat, fact=c(30, 30))
names(temp_sat)
names(SRTM2) = 'SRTM'
temp_sat = (temp_sat  * 0.02)   - 273.15 # Convert kelvin to celsius
SRTM = crop(SRTM,temp_sat)
MODIS_stacked <- stack(SRTM,temp_sat)
MODIS_stacked_df <- as.data.frame(MODIS_stacked)
require(rgdal);require(raster);require(plyr);require(lubridate);require(dplyr);require(ggplot2);require(tidyverse);require(viridis);require(reshape2)
head(MODIS_stacked_df)
col_to_melt <- names(MODIS_stacked_df[,2 : length(MODIS_stacked_df)])
col_to_melt
MODIS_stacked_df <- MODIS_stacked_df  %>%
melt(
measure.vars = col_to_melt,
variable.name = 'LST',
value.name = 'Temperature')  %>% drop_na() %>% dplyr::select_if(is.numeric) %>% distinct() %>%  rename(Elevation = SRTM_30m_Gal_res) # keep only numeric colummns
MODIS_stacked_df
head(MODIS_stacked_df)
MODIS_stacked_df <- as.data.frame(MODIS_stacked)
col_to_melt <- names(MODIS_stacked_df[,2 : length(MODIS_stacked_df)])
MODIS_stacked_df <- MODIS_stacked_df  %>%
melt(
measure.vars = col_to_melt,
variable.name = 'LST',
value.name = 'Temperature')  %>% drop_na() %>% dplyr::select_if(is.numeric) %>% distinct() %>%  rename(Elevation = SRTM_30m_Gal_res) %>% filter(Elevation <= 400) # keep only numeric colummns
head(MODIS_stacked_df <- MODIS_stacked_df  %>%
melt(
measure.vars = col_to_melt,
variable.name = 'LST',
value.name = 'Temperature')  %>% drop_na() %>% dplyr::select_if(is.numeric) %>% distinct() %>%  rename(Elevation = SRTM_30m_Gal_res) %>% filter(Elevation <= 400) # keep only numeric colummns
)
head(MODIS_stacked_df <- MODIS_stacked_df  %>%
melt(
measure.vars = col_to_melt,
variable.name = 'LST',
value.name = 'Temperature')  %>% drop_na() %>% dplyr::select_if(is.numeric) %>% distinct() %>%  rename(Elevation = SRTM_30m_Gal_res) %>% filter(Elevation <= 400) # keep only numeric colummns
)
MODIS_stacked_df <- as.data.frame(MODIS_stacked)
col_to_melt <- names(MODIS_stacked_df[,2 : length(MODIS_stacked_df)])
head(MODIS_stacked_df)
MODIS_stacked_df <- MODIS_stacked_df  %>%
melt(
measure.vars = col_to_melt,
variable.name = 'LST',
value.name = 'Temperature')  %>% drop_na() %>% dplyr::select_if(is.numeric) %>% distinct() %>%  rename(Elevation = SRTM_30m_Gal_res) %>% filter(SRTM_30m_Gal_res < 400) # keep only numeric colummns
head(MODIS_stacked_df)
MODIS_stacked <- stack(SRTM,temp_sat)
MODIS_stacked_df <- as.data.frame(MODIS_stacked)
col_to_melt <- names(MODIS_stacked_df[,2 : length(MODIS_stacked_df)])
MODIS_stacked_df <- MODIS_stacked_df  %>%
melt(
measure.vars = col_to_melt,
variable.name = 'LST',
value.name = 'Temperature')  %>% drop_na() %>% dplyr::select_if(is.numeric) %>% distinct() %>%  rename(Elevation = SRTM_30m_Gal_res) %>% filter(Elevation < 400) # keep only numeric colummns
head(MODIS_stacked_df)
tail(MODIS_stacked_df)
ggplot(MODIS_stacked_df, aes(Elevation, Temperature))+ geom_line(alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in Celsius')+ggtitle('MODIS Night LST')
monthly_modis_plot <- ggplot(MODIS_stacked_df, aes(Elevation, Temperature))+ geom_line(alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in Celsius')+ggtitle('MODIS Night LST')
head(ibutton_df)
ibutton_df %>% group_by(Altitude) %>% ggplot(aes(x = Altitude, y = Value)) +  geom_violin(alpha=.5,col="red",scale = "width")+ geom_point(alpha=.5,position="jitter", size = 0.01) + theme_classic()+ggtitle('Ibutton all data')+xlab('Elevation')+ylab('Temperature in Celsius')
head(ibutton_df)
table(ibutton_df$Altitude)
ibutton_df %>% mutate(Altitude = as.factor(Altitude)) %>%  group_by(Altitude) %>% ggplot(aes(x = Altitude, y = Value)) +  geom_violin(alpha=.5,col="red",scale = "width")+ geom_point(alpha=.5,position="jitter", size = 0.01) + theme_classic()+ggtitle('Ibutton all data')+xlab('Elevation')+ylab('Temperature in Celsius')
# thermal images + triggered by motion.
monthly_ibutton_plot <- ibutton_df %>% mutate(Altitude = as.factor(Altitude)) %>%  group_by(Altitude) %>% ggplot(aes(x = Altitude, y = Value)) +  geom_violin(alpha=.5,col="red",scale = "width")+ geom_point(alpha=.5,position="jitter", size = 0.01) + theme_classic()+ggtitle('Ibutton all data')+xlab('Elevation')+ylab('Temperature in Celsius')
tortoise_df
head(tortoise_df)
monthly_tortoise_plot <-ggplot(tortoise_df, aes(SRTM, calibrated_temp))+ geom_path(aes(color=individual_id),alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in Celsius')+ggtitle('Tortoise')
monthly_tortoise_plot
monthly_tortoise_plot <-ggplot(tortoise_df, aes(SRTM, temperature_calibrated))+ geom_path(aes(color=individual_id),alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in Celsius')+ggtitle('Tortoise')
monthly_tortoise_plot
grid.arrange(monthly_modis_plot, monthly_ibutton_plot, monthly_tortoise_plot)
require(gridExtra)
grid.arrange(monthly_modis_plot, monthly_ibutton_plot, monthly_tortoise_plot)
monthly_tortoise_plot <-ggplot(tortoise_df, aes(SRTM, temperature_calibrated))+ geom_path(aes(color=individual_id),alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in Celsius')+ggtitle('Tortoise')+xlim(0,400)
monthly_tortoise_plot
monthly_modis_plot <- ggplot(MODIS_stacked_df, aes(Elevation, Temperature))+ geom_line(alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in Celsius')+ggtitle('MODIS Night LST')+xlim(0,400)
# thermal images + triggered by motion.
monthly_ibutton_plot <- ibutton_df %>% mutate(Altitude = as.factor(Altitude)) %>%  group_by(Altitude) %>% ggplot(aes(x = Altitude, y = Value)) +  geom_violin(alpha=.5,col="red",scale = "width")+ geom_point(alpha=.5,position="jitter", size = 0.01) + theme_classic()+ggtitle('Ibutton all data')+xlab('Elevation')+ylab('Temperature in Celsius')+xlim(0,400)
monthly_tortoise_plot <-ggplot(tortoise_df, aes(SRTM, temperature_calibrated))+ geom_path(aes(color=individual_id),alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in Celsius')+ggtitle('Tortoise')+xlim(0,400)
grid.arrange(monthly_modis_plot, monthly_ibutton_plot, monthly_tortoise_plot)
monthly_modis_plot <- ggplot(MODIS_stacked_df, aes(Elevation, Temperature))+ geom_line(alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in Celsius')+ggtitle('MODIS Night LST')+xlim(0,400)
# thermal images + triggered by motion.
monthly_ibutton_plot <- ibutton_df %>% mutate(Altitude = as.factor(Altitude)) %>%  group_by(Altitude) %>% ggplot(aes(x = Altitude, y = Value)) +  geom_violin(alpha=.5,col="red",scale = "width")+ geom_point(alpha=.5,position="jitter", size = 0.01) + theme_classic()+ggtitle('Ibutton all data')+xlab('Elevation')+ylab('Temperature in Celsius')
monthly_tortoise_plot <-ggplot(tortoise_df, aes(SRTM, temperature_calibrated))+ geom_path(aes(color=individual_id),alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in Celsius')+ggtitle('Tortoise')+xlim(0,400)
grid.arrange(monthly_modis_plot, monthly_ibutton_plot, monthly_tortoise_plot)
ggplot(tortoise_df, aes(SRTM, temperature_calibrated))+ geom_path(aes(color=individual_id),alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in Celsius')+ggtitle('Tortoise')+xlim(0,400)+theme(panel.border = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),
axis.ticks.x=element_blank(),axis.title.y=element_blank(),
axis.text.y=element_blank(),axis.ticks.y=element_blank()
)
monthly_tortoise_plot <-ggplot(tortoise_df, aes(SRTM, temperature_calibrated))+ geom_path(aes(color=individual_id),alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in Celsius')+ggtitle('Tortoise')+xlim(0,400)+theme(plot.title = element_text(size = 18, face = "italic"),element_line(colour = "black", size = 1, linetype = "solid"),axis.title.y = element_text(face = 'bold'),axis.title.x = element_text(face = 'bold'),axis.text = element_text(face = 'bold'))
monthly_tortoise_plot
ggplot(MODIS_stacked_df, aes(Elevation, Temperature))+ geom_line(alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in Celsius')+ggtitle('MODIS Night LST')+xlim(0,400)
monthly_modis_plot <- ggplot(MODIS_stacked_df, aes(Elevation, Temperature))+ geom_line(alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in Celsius')+ggtitle(paste0('Satellite temperature - '), year, '-', month)+xlim(0,400)
monthly_modis_plot <- ggplot(MODIS_stacked_df, aes(Elevation, Temperature))+ geom_line(alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in Celsius')+ggtitle(paste0('Satellite temperature - ', year, '-', month))+xlim(0,400)
monthly_modis_plot
monthly_modis_plot <- ggplot(MODIS_stacked_df, aes(Elevation, Temperature))+ geom_line(alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in Celsius')+ggtitle(paste0('Satellite temperature\n - ', year, '-', month))+xlim(0,400)
monthly_modis_plot
start_day
monthly_modis_plot <- ggplot(MODIS_stacked_df, aes(Elevation, Temperature))+ geom_line(alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in Celsius')+ggtitle(paste0('Satellite temperature\n', year, '/', month, '/', start_day, '-', end_day))+xlim(0,400)
monthly_modis_plot
# thermal images + triggered by motion.
monthly_ibutton_plot <- ibutton_df %>% mutate(Altitude = as.factor(Altitude)) %>%  group_by(Altitude) %>% ggplot(aes(x = Altitude, y = Value)) +  geom_violin(alpha=.5,col="red",scale = "width")+ geom_point(alpha=.5,position="jitter", size = 0.01) + theme_classic()+ggtitle('Ibutton all data')+xlab('Elevation')+ylab('Temperature in Celsius')
monthly_ibutton_plot
monthly_ibutton_plot <- ibutton_df %>% mutate(Altitude = as.factor(Altitude)) %>%  group_by(Altitude) %>% ggplot(aes(x = Altitude, y = Value)) +  geom_violin(alpha=.5,col="red",scale = "width")+ geom_point(alpha=.5,position="jitter", size = 0.01) + theme_classic()+ggtitle(paste0('Ibutton all data\n', year, '/', month, '/', start_day, '-', end_day))+xlab('Elevation')+ylab('Temperature in Celsius')
monthly_ibutton_plot
monthly_modis_plot <- ggplot(MODIS_stacked_df, aes(Elevation, Temperature))+ geom_line(alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in Celsius')+ggtitle(paste0('Satellite temperature\n', year, '/', month, '/', start_day, '-', end_day))+xlim(0,400)
# thermal images + triggered by motion.
monthly_ibutton_plot <- ibutton_df %>% mutate(Altitude = as.factor(Altitude)) %>%  group_by(Altitude) %>% ggplot(aes(x = Altitude, y = Value)) +  geom_violin(alpha=.5,col="red",scale = "width")+ geom_point(alpha=.5,position="jitter", size = 0.01) + theme_classic()+ggtitle(paste0('Ibutton temperature\n', year, '/', month, '/', start_day, '-', end_day))+xlab('Elevation')+ylab('Temperature in Celsius')
monthly_tortoise_plot <-ggplot(tortoise_df, aes(SRTM, temperature_calibrated))+ geom_path(aes(color=individual_id),alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in Celsius')+ggtitle(paste0('Animal borne collected temperature\n', year, '/', month, '/', start_day, '-', end_day))+xlim(0,400)
grid.arrange(monthly_modis_plot, monthly_ibutton_plot, monthly_tortoise_plot)
monthly_modis_plot <- ggplot(MODIS_stacked_df, aes(Elevation, Temperature))+ geom_line(alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in °C')+ggtitle(paste0('Satellite temperature\n', year, '/', month, '/', start_day, '-', end_day))+xlim(0,400)
# thermal images + triggered by motion.
monthly_ibutton_plot <- ibutton_df %>% mutate(Altitude = as.factor(Altitude)) %>%  group_by(Altitude) %>% ggplot(aes(x = Altitude, y = Value)) +  geom_violin(alpha=.5,col="red",scale = "width")+ geom_point(alpha=.5,position="jitter", size = 0.01) + theme_classic()+ggtitle(paste0('Ibutton temperature\n', year, '/', month, '/', start_day, '-', end_day))+xlab('Elevation')+ylab('Temperature in °C')
monthly_tortoise_plot <-ggplot(tortoise_df, aes(SRTM, temperature_calibrated))+ geom_path(aes(color=individual_id),alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in °C')+ggtitle(paste0('Animal borne collected temperature\n', year, '/', month, '/', start_day, '-', end_day))+xlim(0,400)
grid.arrange(monthly_modis_plot, monthly_ibutton_plot, monthly_tortoise_plot)
monthly_modis_plot <- ggplot(MODIS_stacked_df, aes(Elevation, Temperature))+ geom_line(alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in °C')+ggtitle(paste0('Satellite temperature\n', year, '/', month, '/', start_day, '-', end_day))+xlim(0,400)+geom_smooth(col = 'red')
# thermal images + triggered by motion.
monthly_ibutton_plot <- ibutton_df %>% mutate(Altitude = as.factor(Altitude)) %>%  group_by(Altitude) %>% ggplot(aes(x = Altitude, y = Value)) +  geom_violin(alpha=.5,col="red",scale = "width")+ geom_point(alpha=.5,position="jitter", size = 0.01) + theme_classic()+ggtitle(paste0('Ibutton temperature\n', year, '/', month, '/', start_day, '-', end_day))+xlab('Elevation')+ylab('Temperature in °C')
monthly_tortoise_plot <-ggplot(tortoise_df, aes(SRTM, temperature_calibrated))+ geom_path(aes(color=individual_id),alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in °C')+ggtitle(paste0('Animal borne collected temperature\n', year, '/', month, '/', start_day, '-', end_day))+xlim(0,400)
grid.arrange(monthly_modis_plot, monthly_ibutton_plot, monthly_tortoise_plot)
grid.arrange(monthly_modis_plot, monthly_ibutton_plot, monthly_tortoise_plot, ncol =1)
grid.arrange(monthly_modis_plot, monthly_ibutton_plot, monthly_tortoise_plot, ncol =3)
min_MODIS <-min(MODIS_stacked_df$Temperature)
min_MODIS
min_MODIS <-min(MODIS_stacked_df$Temperature, na.rm = T)
max_MODIS <-max(MODIS_stacked_df$Temperature, na.rm = T)
min_MODIS <-min(MODIS_stacked_df$Temperature, na.rm = T)
max_MODIS <-max(MODIS_stacked_df$Temperature, na.rm = T)
min_tortoise <-min(tortoise_df$Temperature, na.rm = T)
max_tortoise <-max(tortoise_df$Temperature, na.rm = T)
min_ibutton <-min(ibutton_df$Temperature, na.rm = T)
max_ibutton <-max(ibutton_df$Temperature, na.rm = T)
min_MODIS
max_MODIS
min_tortoise
max_tortoise
min_MODIS <-min(MODIS_stacked_df$Temperature, na.rm = T)
max_MODIS <-max(MODIS_stacked_df$Temperature, na.rm = T)
min_tortoise <-min(tortoise_df$temperature_calibrated, na.rm = T)
max_tortoise <-max(tortoise_df$temperature_calibrated, na.rm = T)
min_ibutton <-min(ibutton_df$Value, na.rm = T)
max_ibutton <-max(ibutton_df$Value, na.rm = T)
min_MODIS
min_tortoise
min_ibutton
max_ibutton
c(min_MODIS, min_tortoise, min_ibutton)
min(c(min_MODIS, min_tortoise, min_ibutton))
max(c(max_MODIS, max_tortoise, max_ibutton))
monthly_modis_plot <- ggplot(MODIS_stacked_df, aes(Elevation, Temperature))+ geom_line(alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in °C')+ggtitle(paste0('Satellite temperature\n', year, '/', month, '/', start_day, '-', end_day))+xlim(0,400)+geom_smooth(col = 'red')+ylim(min_all, max_all)
monthly_modis_plot
min_all <- min(c(min_MODIS, min_tortoise, min_ibutton))
max_all <- max(c(max_MODIS, max_tortoise, max_ibutton))
monthly_modis_plot <- ggplot(MODIS_stacked_df, aes(Elevation, Temperature))+ geom_line(alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in °C')+ggtitle(paste0('Satellite temperature\n', year, '/', month, '/', start_day, '-', end_day))+xlim(0,400)+geom_smooth(col = 'red')+ylim(min_all, max_all)
monthly_modis_plot
monthly_tortoise_plot <-ggplot(tortoise_df, aes(SRTM, temperature_calibrated))+ geom_path(aes(color=individual_id),alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in °C')+ggtitle(paste0('Animal borne collected temperature\n', year, '/', month, '/', start_day, '-', end_day))+xlim(0,400)+ylim(min_all, max_all)
monthly_tortoise_plot
monthly_ibutton_plot <- ibutton_df %>% mutate(Altitude = as.factor(Altitude)) %>%  group_by(Altitude) %>% ggplot(aes(x = Altitude, y = Value)) +  geom_violin(alpha=.5,col="red",scale = "width")+ geom_point(alpha=.5,position="jitter", size = 0.01) + theme_classic()+ggtitle(paste0('Ibutton temperature\n', year, '/', month, '/', start_day, '-', end_day))+xlab('Elevation')+ylab('Temperature in °C')+ylim(min_all, max_all)
monthly_ibutton_plot
monthly_modis_plot <- ggplot(MODIS_stacked_df, aes(Elevation, Temperature))+ geom_line(alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in °C')+ggtitle(paste0('Satellite temperature\n', year, '/', month, '/', start_day, '-', end_day))+xlim(0,400)+geom_smooth(col = 'red')+ylim(min_all, max_all)+theme(plot.title = element_text(face="bold"))
# thermal images + triggered by motion.
monthly_ibutton_plot <- ibutton_df %>% mutate(Altitude = as.factor(Altitude)) %>%  group_by(Altitude) %>% ggplot(aes(x = Altitude, y = Value)) +  geom_violin(alpha=.5,col="red",scale = "width")+ geom_point(alpha=.5,position="jitter", size = 0.01) + theme_classic()+ggtitle(paste0('Ibutton temperature\n', year, '/', month, '/', start_day, '-', end_day))+xlab('Elevation')+ylab('Temperature in °C')+ylim(min_all, max_all)+theme(plot.title = element_text(face="bold"))
monthly_tortoise_plot <-ggplot(tortoise_df, aes(SRTM, temperature_calibrated))+ geom_path(aes(color=individual_id),alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in °C')+ggtitle(paste0('Animal borne collected temperature\n', year, '/', month, '/', start_day, '-', end_day))+xlim(0,400)+ylim(min_all, max_all)+theme(plot.title = element_text(face="bold"))
grid.arrange(monthly_modis_plot, monthly_ibutton_plot, monthly_tortoise_plot)
grid.arrange(monthly_modis_plot, monthly_ibutton_plot, monthly_tortoise_plot, ncol =3)
monthly_modis_plot <- ggplot(MODIS_stacked_df, aes(Elevation, Temperature))+ geom_line(alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in °C')+ggtitle(paste0('Satellite temperature\n', year, '/', month, '/', start_day, '-', end_day))+xlim(0,400)+ylim(min_all, max_all)+theme(plot.title = element_text(face="bold")) # +geom_smooth(col = 'red')
# thermal images + triggered by motion.
monthly_ibutton_plot <- ibutton_df %>% mutate(Altitude = as.factor(Altitude)) %>%  group_by(Altitude) %>% ggplot(aes(x = Altitude, y = Value)) +  geom_violin(alpha=.5,col="red",scale = "width")+ geom_point(alpha=.5,position="jitter", size = 0.01) + theme_classic()+ggtitle(paste0('Ibutton temperature\n', year, '/', month, '/', start_day, '-', end_day))+xlab('Elevation')+ylab('Temperature in °C')+ylim(min_all, max_all)+theme(plot.title = element_text(face="bold"))
monthly_tortoise_plot <-ggplot(tortoise_df, aes(SRTM, temperature_calibrated))+ geom_path(aes(color=individual_id),alpha = 1)+theme_classic()+xlab('Elevation in meter')+ylab('Temperature in °C')+ggtitle(paste0('Animal borne collected temperature\n', year, '/', month, '/', start_day, '-', end_day))+xlim(0,400)+ylim(min_all, max_all)+theme(plot.title = element_text(face="bold"))
grid.arrange(monthly_modis_plot, monthly_ibutton_plot, monthly_tortoise_plot, ncol =3)
require(phytools);require(ggtree);require(BiocVersion);require(ape);require(treeio)
setwd('/Users/diegoellis/projects/development/Comparative_genomics/finalproject/Data/All_TLR/')
tree <- read.tree('trimed_inout_TLR.fasta.contree')
tree
plot(tree,no.margin=TRUE,edge.width=2)
require(phytools);require(ggtree);require(BiocVersion);require(ape);require(treeio)
?read.tree
# This is convenient shorthand
ggtree(tree)
# This is convenient shorthand
ggtree(tree) + theme_tree2()
# This is convenient shorthand
ggtree(tree) + theme_tree2()+ geom_nodepoint()
# This is convenient shorthand
ggtree(tree) + theme_tree2()+ geom_nodepoint(col = 'lightyellow')
# This is convenient shorthand
ggtree(tree) + theme_tree2()+ geom_nodepoint(col = 'lightyellow', alpha = 0.5)
# This is convenient shorthand
ggtree(tree) + theme_tree2()+ geom_nodepoint(col = 'cornsilk1', alpha = 0.5)
# This is convenient shorthand
ggtree(tree) + theme_tree2()+ geom_nodepoint(col = 'cornsilk1', alpha = 0.1)
# This is convenient shorthand
ggtree(tree) + theme_tree2()+ geom_nodepoint(col = 'cornsilk1', alpha = 0.9)
# This is convenient shorthand
ggtree(tree) + theme_tree2()+ geom_nodepoint(col = 'cornsilk1', alpha = 0.8)
# This is convenient shorthand
ggtree(tree) + theme_tree2()+ geom_nodepoint(col = 'cornsilk1', alpha = 0.8) + geom_tippoint()
# This is convenient shorthand
ggtree(tree) + theme_tree2()+ geom_nodepoint(col = 'cornsilk1', alpha = 0.8) + geom_tippoint() + geom_tiplab()
ggtree(tree) + theme_tree2()+ geom_nodepoint(col = 'cornsilk1', alpha = 0.8) + geom_tippoint() + geom_tiplab()+ geom_text(aes(label=node), hjust=-.3)
ggtree(tree) + geom_tiplab()
ggtree(tree) + theme_tree2()+ geom_nodepoint(col = 'cornsilk1', alpha = 0.8) + geom_tippoint() + geom_tiplab()+ geom_text(aes(label=node), hjust=-.3)  geom_hilight(node=17, fill="gold")
# This is convenient shorthand
ggtree(tree) + theme_tree2()+ geom_nodepoint(col = 'cornsilk1', alpha = 0.8) + geom_tippoint() + geom_tiplab()+ geom_text(aes(label=node), hjust=-.3)  +geom_hilight(node=17, fill="gold")
ggtree(tree) + theme_tree2()+ geom_nodepoint(col = 'cornsilk1', alpha = 0.8) + geom_tippoint() + geom_tiplab()+ geom_text(aes(label=node), hjust=-.3)
# This is convenient shorthand
ggtree(tree) + theme_tree2()+ geom_nodepoint(col = 'cornsilk1', alpha = 0.8) + geom_tippoint() + geom_tiplab()+ geom_text(aes(label=node), hjust=-.3)+
geom_tiplab(align=TRUE, linesize=.5)
# This is convenient shorthand
TLR_gene_tree <- ggtree(tree) + theme_tree2()+ geom_nodepoint(col = 'cornsilk1', alpha = 0.8) + geom_tippoint() + geom_tiplab()+ geom_text(aes(label=node), hjust=-.3)+
geom_tiplab(align=TRUE, linesize=.5)
# https://4va.github.io/biodatasci/r-ggtree.html
# Plot internal node number
# his puts the multiple sequence alignment and the tree side-by-side
# The function takes a tree object (produced with ggtree()) and the path to the FASTA multiple sequence alignment
msaplot(p=ggtree(tree), fasta="aligned_ingr_outgr_all_TLR.fasta", window=c(150, 175))
# https://4va.github.io/biodatasci/r-ggtree.html
# Plot internal node number
# his puts the multiple sequence alignment and the tree side-by-side
# The function takes a tree object (produced with ggtree()) and the path to the FASTA multiple sequence alignment
msaplot(p=ggtree(tree), fasta="aligned_ingr_outgr_all_TLR.fasta"))
# https://4va.github.io/biodatasci/r-ggtree.html
# Plot internal node number
# his puts the multiple sequence alignment and the tree side-by-side
# The function takes a tree object (produced with ggtree()) and the path to the FASTA multiple sequence alignment
msaplot(p=ggtree(tree), fasta="aligned_ingr_outgr_all_TLR.fasta")
ggtree(tree)
?msaplot
msaplot(p=ggtree(tree), fasta="trimed_inout_TLR.fasta")
msaplot(p=ggtree(tree), fasta="trimed_inout_TLR.fasta.treefile")
msaplot(p=ggtree(tree), fasta="trimed_inout_TLR.fasta")
str(tree)
tree$tip.label
tree$node.label
tree$edge
tree$Nnode
tree$tip.label
tree$tip.label
# This is convenient shorthand
TLR_gene_tree <- ggtree(tree) + theme_tree2()+ geom_nodepoint(col = 'cornsilk1', alpha = 0.8) + geom_tippoint() + geom_tiplab()+ geom_text(aes(label=node), hjust=-.3)+
geom_tiplab(align=TRUE, linesize=.5)
TLR_gene_tree
# "trimed_inout_TLR.fasta.iqtree"
#  "trimed_inout_TLR.fasta.contree"
# tree <- read.tree(text = 'trimed_inout_TLR.fasta.iqtree')
# tree <- read.iqtree('trimed_inout_TLR.fasta.iqtree')
phy <- read.tree('trimed_inout_TLR.fasta.contree')
plot(phy,no.margin=TRUE,edge.width=2)
# This is convenient shorthand
TLR_gene_tree <- ggtree(phy) + theme_tree2()+ geom_nodepoint(col = 'cornsilk1', alpha = 0.8) + geom_tippoint() + geom_tiplab()+ geom_text(aes(label=node), hjust=-.3)+  geom_tiplab(align=TRUE, linesize=.5)
?ape::plot
ape::plot.phylo(phy)
plot(phy,no.margin=TRUE,edge.width=2)
TLR_gene_tree <- ggtree(phy) + theme_tree2()+ geom_nodepoint(col = 'cornsilk1', alpha = 0.8) + geom_tippoint() + geom_tiplab()+ geom_text(aes(label=node), hjust=-.3)+  geom_tiplab(align=TRUE, linesize=.5)
TLR_gene_tree
branches <- phy$edge
species <- phy$tip.label
brlength <- phy$edge.length
nodes <- phy$Nnode
nodes
brlength
species
branches
plot(phy, label.offset=0.2)
nodelabels() # add node numbers
tiplabels()  # add tip numbers
ladderized.phy <- ladderize(phy)
plot(ladderized.phy, type="fan",
show.tip.label=FALSE,
edge.width=3,
edge.color="blue")
plot(ladderized.phy, type="fan",
show.tip.label=FALSE,
edge.width=3)
ladderized.phy <- ladderize(phy)
plot(ladderized.phy)
plot(ladderized.phy, type="fan",
show.tip.label=FALSE,
edge.width=0.1)
plot(ladderized.phy, type="fan",
show.tip.label=FALSE,
edge.width=0.5)
write.tree(phy, file = "trimed_inout_TLR_tree_newick", append = FALSE,           digits = 10, tree.names = FALSE)
list.files()
tree <- read.tree('trimed_inout_TLR_tree_newick.nw')
msaplot(p=ggtree(tree), fasta="trimed_inout_TLR.fasta", window=c(150, 175))
msaplot(p=ggtree(tree), fasta="trimed_inout_TLR.fasta")
tree
plot(tree)
tree$edge
tree$Nnode
tree$node.label
tree$tip.label
